{"version":3,"sources":["components/Header/sidenav/sideNavItems.js","components/Header/sidenav/sidenav.js","components/Header/header.js","components/Landing/landing.js","components/Home/home.js","hoc/Layout/layout.js","firebase.js","config.js","components/Search/search.js","components/Login/login.js","components/Register/register.js","components/Dashboard/restDashboard.js","components/Dashboard/adminDashboard.js","components/Dashboard/custsDashBoard.js","components/Dashboard/dashboard.js","components/Logout/logout.js","components/User/Restaurants/restaurants.js","components/widgets/user/restaurant/restMenuTemplate.js","components/widgets/cart/cartTemplate.js","components/User/Restaurants/restaurant.js","components/widgets/user/userList.js","components/User/Customers/customers.js","components/User/Customers/customer.js","components/User/Riders/riders.js","components/User/orders/orders.js","components/widgets/user/userProfile.js","components/User/user.js","components/User/addUser.js","components/User/addRestaurant.js","components/widgets/Uploader/uploader.js","components/User/Restaurants/addMenuItem.js","components/User/Restaurants/restMenu.js","components/User/Cart/viewCart.js","components/User/orders/restOrders.js","components/User/orders/userOrders.js","components/User/orders/adminOders.js","components/User/changeProfile.js","components/User/Restaurants/edit_menu.js","routes.js","index.js"],"names":["SideNavItems","items","type","icon","text","link","restricted","role","className","map","item","i","userId","sessionStorage","getItem","to","name","element","Nav","props","showNav","navStyle","background","onHideNav","Header","state","renderCartSummary","cart","JSON","parse","length","renderUserLinks","renderLinks","this","setState","onClick","Component","Landing","search","required","value","handleChange","event","target","handleSubmit","preventDefault","history","push","error","onSubmit","placeholder","onChange","withRouter","Home","Layout","children","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseLooper","snapshot","data","forEach","childSnapshot","id","key","val","genDate","moment","Date","format","defaultImage","restDefaultImage","foodDefaultImage","Search","rests","renderRestUnits","rest","style","backgroundImage","location","contact","renderError","window","query","URLSearchParams","get","console","log","database","ref","orderByChild","equalTo","once","then","Login","isLoading","errors","formData","email","password","field","dataToSubmit","loginData","setItem","renderButton","renderErrors","blur","Register","createdOn","loginId","index","RestDash","restId","restData","renderDash","class","aria-hidden","renderName","AdminDashboard","CustDash","custData","DashBoard","Logout","clear","Restaurants","renderRests","_","isEmpty","renderCta","RestMenuTemplate","menuData","addToCart","handleDelete","renderMenuItems","category","menuItem","cover","fileUrl","price","getCategories","Set","CartTemplate","cartData","removeItem","clearCart","placeOrder","total","parseInt","renderTotal","Restaurant","restMenu","showError","renderProfile","menuId","position","splice","remove","renderMenu","status","restName","stringify","cartItem","renderCart","match","params","UserList","users","user","profileData","renderAvatar","Customers","auth","renderUsers","customers","filter","Customer","Riders","Orders","orders","renderOrderDetails","order","renderOrderItems","renderOrders","userProfile","User","renderUser","AddUser","newFormData","limitToLast","newUser","renderNewUser","AddRestaurant","newRest","renderNewRest","Uploader","username","avatar","isUploading","progress","avatarURL","handleUploadStart","handleUploadError","handleProgress","handleUploadSuccess","filename","storage","child","getDownloadURL","url","fileData","storeFilename","avatarUrl","width","height","backgroundSize","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","AddMenuItem","e","Menu","menus","quantity","itemCost","menu","sort","a","b","ViewCart","userData","userOrder","restIds","RestOrders","completeOrder","orderId","find","update","deleteOrder","renderOrder","clearHistory","restOrders","UserOders","AdminOrders","ChangeProfile","handleProfileChange","EditMenu","renderForm","Routes","path","exact","component","Dashboard","UserOrders","RestMenu","ReactDOM","render","document","querySelector"],"mappings":"gpBAwHeA,EApHM,WACnB,IAAMC,EAAQ,CACZ,CACEC,KAAM,WACNC,KAAM,OACNC,KAAM,YACNC,KAAM,kBACNC,YAAY,GAGd,CACEJ,KAAM,WACNC,KAAM,OACNC,KAAM,WACNC,KAAM,aAGR,CACEH,KAAM,WACNC,KAAM,OACNC,KAAM,UACNC,KAAM,gBACNC,YAAY,GAGd,CACEJ,KAAM,WACNC,KAAM,MACNC,KAAM,SACNC,KAAM,eACNC,YAAY,GAGd,CACEJ,KAAM,WACNC,KAAM,MACNC,KAAM,YACNC,KAAM,kBACNC,YAAY,EACZC,KAAM,SAER,CACEL,KAAM,WACNC,KAAM,MACNC,KAAM,SACNC,KAAM,eACNC,YAAY,EACZC,KAAM,SAGR,CACEL,KAAM,WACNC,KAAM,OACNC,KAAM,SACNC,KAAM,UACNC,YAAY,IAsDhB,OACE,6BACE,wBAAIE,UAAU,aAPTP,EAAMQ,KAAI,SAACC,EAAMC,GACtB,OA9CY,SAACD,EAAMC,GACrB,IAAMC,EAASC,eAAeC,QAAQ,UAEtC,OAAIJ,EAAKJ,WAGHO,eAAeC,QAAQ,UACrBJ,EAAKH,KACMM,eAAeC,QAAQ,UAEpBJ,EAAKH,KACnB,wBAAIC,UAAWE,EAAKR,MACjB,IACD,kBAAC,IAAD,CAAMa,GAAIL,EAAKL,MACb,kBAAC,IAAD,CAAaW,KAAMN,EAAKP,OAD1B,IACoCO,EAAKN,KAAM,KACvC,KAER,KAKIQ,EAOJ,KANF,wBAAIJ,UAAWE,EAAKR,MACjB,IACD,kBAAC,IAAD,CAAMa,GAAIL,EAAKL,MACb,kBAAC,IAAD,CAAaW,KAAMN,EAAKP,OAD1B,IACoCO,EAAKN,KAAM,KACvC,UArBhB,EA4BE,wBAAII,UAAWE,EAAKR,MACjB,IACD,kBAAC,IAAD,CAAMa,GAAIL,EAAKL,MACb,kBAAC,IAAD,CAAaW,KAAMN,EAAKP,OAD1B,IACoCO,EAAKN,KAAM,KACvC,KAQLa,CAAQP,SC1FNQ,G,OAdH,SAAAC,GACV,OACE,kBAAC,IAAD,CACEC,QAASD,EAAMC,QACfC,SAAU,CACRC,WAAY,WAEdC,UAAWJ,EAAMI,WAEjB,kBAAC,EAAD,SCuGSC,G,kNA7GbC,MAAQ,CACNL,SAAS,G,EAGXM,kBAAoB,WAClB,IAAMC,EAAOC,KAAKC,MAAMhB,eAAeC,QAAQ,SAG/C,GAAIa,EACF,OAAO,kBAAC,IAAD,CAAMZ,GAAG,kBAAT,oBAAqCY,EAAKG,QAA1C,O,EAIXC,gBAAkB,WAGhB,OAFalB,eAAeC,QAAQ,SAGlC,IAAK,OACH,OACE,wBAAIN,UAAU,iBACZ,4BACG,IACD,kBAAC,IAAD,CAAMO,GAAG,gBAAT,cAMR,IAAK,WACH,OACE,wBAAIP,UAAU,iBACZ,4BACG,IACD,kBAAC,IAAD,CAAMO,GAAG,kBAAT,YAMR,IAAK,QACH,OACE,wBAAIP,UAAU,iBACZ,4BACG,IACD,kBAAC,IAAD,CAAMO,GAAG,cAAT,iBAKR,QACE,OAAO,O,EAIbiB,YAAc,WAIZ,OAFenB,eAAeC,QAAQ,WAIlC,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,cAAT,cACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,gBACC,EAAKgB,kBAEN,kBAAC,IAAD,CAAMhB,GAAG,WAAT,YAKF,6BACE,kBAAC,IAAD,CAAMA,GAAG,KAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,gBACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,e,wEAME,IAAD,OACP,OACE,6BACE,4BAAQP,UAAU,eAChB,kBAAC,EAAD,CACEY,QAASa,KAAKR,MAAML,QACpBG,UAAW,kBAAM,EAAKW,SAAS,CAAEd,SAAS,OAG5C,yBAAKZ,UAAU,aACb,kBAAC,IAAD,CAAMO,GAAG,KACP,wBAAIP,UAAU,QAAd,UAAiC,KAGnC,kBAAC,IAAD,CACEQ,KAAK,OACLR,UAAU,OACV2B,QAAS,kBAAM,EAAKD,SAAS,CAAEd,SAAS,OAG1C,6BAAMa,KAAKD,sB,GAtGFI,cCAfC,G,kNACJZ,MAAQ,CACNa,OAAQ,CACNC,UAAU,EACVC,MAAO,K,EAIXC,aAAe,SAAAC,GACb,IAAMJ,EAAS,EAAKb,MAAMa,OAE1BA,EAAOE,MAAQE,EAAMC,OAAOH,MAE5B,EAAKN,SAAS,CACZI,Y,EAIJM,aAAe,SAAAF,GACbA,EAAMG,iBAEN,IAAMP,EAAS,EAAKb,MAAMa,OAAOE,MAElB,KAAXF,EACF,EAAKnB,MAAM2B,QAAQC,KAAnB,oBAAqCT,IAErC,EAAKJ,SAAS,CACZc,MAAO,4B,wEAKH,IAAD,OACP,OACE,yBAAKxC,UAAU,WACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,gBACb,0BAAMyC,SAAU,SAAAP,GAAK,OAAI,EAAKE,aAAaF,KACzC,wBAAIlC,UAAU,cAAd,oBACA,2BACEN,KAAK,OACLc,KAAK,SACLkC,YAAY,sBACZC,SAAUlB,KAAKQ,aACfD,MAAOP,KAAKR,MAAMa,OAAOE,e,GA7CjBJ,cAsDPgB,cAAWf,GCjDXgB,EATF,WACX,OACE,6BACG,IACD,kBAAC,EAAD,MAAY,MCCHC,G,OAJA,SAAAnC,GACb,OAAO,iCAAOA,EAAMoC,SAAb,O,8OCOTC,gBAVqB,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAiB,SAAAC,GACrB,IAAIC,EAAO,GAKX,OAJAD,EAASE,SAAQ,SAAAC,GACfF,EAAKnB,K,yVAAL,EAAYsB,GAAID,EAAcE,KAAQF,EAAcG,WAG/CL,G,kBCjBHM,G,OAAU,WAEd,OADaC,IAAO,IAAIC,MAAQC,OAAO,6BAInCC,EACJ,yEACIC,EACJ,8DACIC,EACJ,kECyEaC,E,2MA/EbtD,MAAQ,CACNuD,MAAO,KACP1C,OAAQ,KACRU,MAAO,M,EAyBTiC,gBAAkB,WAChB,IAAMD,EAAQ,EAAKvD,MAAMuD,MAEzB,OAAOA,EACHA,EAAMvE,KAAI,SAAAyE,GACR,OACE,kBAAC,IAAD,CAAM1E,UAAU,YAAYO,GAAE,qBAAgBmE,EAAKb,KACjD,yBACE7D,UAAU,SACV2E,MAAO,CACLC,gBAAgB,OAAD,OAASP,EAAT,OAGhB,KAEH,yBAAKrE,UAAU,WACb,uBAAGA,UAAU,QAAb,SAA2B0E,EAAKlE,MAChC,uBAAGR,UAAU,YAAb,aAAmC0E,EAAKG,UACxC,uBAAG7E,UAAU,WAAb,YAAiC0E,EAAKI,cAK9C,M,EAGNC,YAAc,WACZ,IAAMvC,EAAQ,EAAKvB,MAAMuB,MAEzB,OAAOA,EAAQ,+BAAKA,GAAa,M,mFAnDd,IAAD,OACdV,EAASkD,OAAOH,SAAS/C,OAEzBmD,EADS,IAAIC,gBAAgBpD,GACdqD,IAAI,KAEvBC,QAAQC,IAAIJ,GAEZjC,EACGsC,WACAC,IAAI,eACJC,aAAa,YACbC,QAAQR,GACRS,KAAK,SACLC,MAAK,SAAAlC,GACJ,IAAMe,EAAQhB,EAAeC,GAE7B,EAAK/B,SAAS,CACZ8C,e,+BAqCN,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKxE,UAAU,aACb,wBAAIA,UAAU,cAAd,kCACkCyB,KAAKR,MAAMa,OAAQ,KAGrD,yBAAK9B,UAAU,gBACZyB,KAAKgD,kBACLhD,KAAKsD,qB,GAxEGnD,aCqJNgE,E,2MAtJb3E,MAAQ,CACN4E,WAAW,EACXC,OAAQ,GACRC,SAAU,CACRC,MAAO,CACLhE,MAAO,GACPD,UAAU,GAGZkE,SAAU,CACRjE,MAAO,GACPD,UAAU,K,EAKhBE,aAAe,SAAAxB,GACb,IAAMsF,EAAW,EAAK9E,MAAM8E,SACtBG,EAAQH,EAAStF,EAAQoD,IAE/BqC,EAAMlE,MAAQvB,EAAQyB,MAAMC,OAAOH,MACnC+D,EAAStF,EAAQoD,IAAMqC,EAEvB,EAAKxE,SAAS,CACZqE,c,EAIJ3D,aAAe,SAAAF,GACbA,EAAMG,iBAEN,IAAM0D,EAAW,EAAK9E,MAAM8E,SAExBI,EAAe,GACfL,EAAS,GACb,IAAK,IAAIhC,KAAOiC,EACdI,EAAarC,GAAOiC,EAASjC,GAAK9B,MAE9B+D,EAASjC,GAAK/B,UAAoC,KAAxBgE,EAASjC,GAAK9B,OAC1C8D,EAAOvD,KAAP,UAAeuB,EAAf,iBAKJ,KAAIgC,EAAOxE,OAAS,GAoClB,OA9BA,EAAKI,SAAS,CACZmE,WAAW,SAGb7C,EACGsC,WACAC,IAAI,SACJC,aAAa,SACbC,QAAQU,EAAaH,OACrBN,KAAK,SACLC,MAAK,SAAAlC,GACJ,IAAM2C,EAAY5C,EAAeC,GAAU,GAG3C,GAAI2C,GAAaA,EAAUH,WAAaE,EAAaF,SAEnD5F,eAAegG,QAAQ,UAAWD,EAAUvC,IAC5CxD,eAAegG,QAAQ,OAAQD,EAAUrG,MACzC,EAAKY,MAAM2B,QAAQC,KAAK,kBACnB,CACL,IAAIuD,EAAS,EAAK7E,MAAM6E,OAExBA,EAAOvD,KAAK,sCACZ,EAAKb,SAAS,CACZmE,WAAW,EACXC,eA7BR,EAAKpE,SAAS,CACZoE,Y,EAsCNQ,aAAe,WACb,OAAO,EAAKrF,MAAM4E,UAChB,yBAAK7F,UAAU,WAAf,aAEA,4BAAQA,UAAU,gBAAlB,W,EAIJuG,aAAe,WACb,IAAMT,EAAS,EAAK7E,MAAM6E,OAE1B,OAAOA,EACHA,EAAO7F,KAAI,SAACuC,EAAOsB,GACjB,OACE,uBAAGA,IAAKA,EAAK9D,UAAU,SACpB,IACAwC,MAIP,M,wEAGI,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,MAEA,yBAAKxC,UAAU,aACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,0BAAd,UAEA,0BAAMyC,SAAU,SAAAP,GAAK,OAAI,EAAKE,aAAaF,KACzC,yBAAKlC,UAAU,gBACb,2BACEN,KAAK,OACLgD,YAAY,QACZC,SAAU,SAAAT,GAAK,OACb,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,QAAS2C,MAAM,KAEhDxE,MAAOP,KAAKR,MAAM8E,SAASC,MAAMhE,SAIrC,yBAAKhC,UAAU,gBACb,2BACEN,KAAK,OACLgD,YAAY,WACZC,SAAU,SAAAT,GAAK,OACb,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,WAAY2C,MAAM,KAEnDxE,MAAOP,KAAKR,MAAM8E,SAASE,SAASjE,SAIvCP,KAAK8E,eACL9E,KAAK6E,uB,GA9IA1E,aC2QL6E,E,2MAvQbxF,MAAQ,CACN4E,WAAW,EACXC,OAAQ,GACRC,SAAU,CACRvF,KAAM,CACJwB,MAAO,GACPD,UAAU,GAGZiE,MAAO,CACLhE,MAAO,GACPD,UAAU,GAGZkE,SAAU,CACRjE,MAAO,GACPD,UAAU,GAGZ+C,QAAS,CACP9C,MAAO,GACPD,UAAU,GAGZ8C,SAAU,CACR7C,MAAO,GACPD,UAAU,K,EAShBE,aAAe,SAAAxB,GACb,IAAMsF,EAAW,EAAK9E,MAAM8E,SACtBG,EAAQH,EAAStF,EAAQoD,IAE/BqC,EAAMlE,MAAQvB,EAAQyB,MAAMC,OAAOH,MACnC+D,EAAStF,EAAQoD,IAAMqC,EAEvB,EAAKxE,SAAS,CACZqE,c,EAIJ3D,aAAe,SAAAF,GACbA,EAAMG,iBAEN,IAAM0D,EAAW,EAAK9E,MAAM8E,SAExBI,EAAe,GAEfL,EAAS,GAEb,IAAK,IAAIhC,KAAOiC,EACdI,EAAarC,GAAOiC,EAASjC,GAAK9B,MAEN,KAAxB+D,EAASjC,GAAK9B,OAChB8D,EAAOvD,KAAP,UAAeuB,EAAf,iBAIJ,GAAIgC,EAAOxE,OAAS,EAClB,EAAKI,SAAS,CACZoE,eAEG,CACL,EAAKpE,SAAS,CACZoE,OAAQ,CAAC,MAGXV,QAAQC,IAAI,wBAEZc,EAAY,KAAW,WACvBA,EAAY,UAAgBnC,IAM5B,EAAKtC,SAAS,CACZmE,WAAW,IAGbT,QAAQC,IAAIc,GAIZ,IAAMC,EAAY,CAChBJ,MAAOG,EAAaH,MACpBC,SAAUE,EAAaF,SACvBlG,KAAMoG,EAAapG,KACnB2G,UAAWP,EAAaO,WAM1BtB,QAAQC,IAAIe,GAEZpD,EACGsC,WACAC,IAAI,SACJhD,KAAK6D,GACLT,MAAK,WACJ,IAAMK,EAAQG,EAAaH,MAI3BhD,EACGsC,WACAC,IAAI,SACJC,aAAa,SACbC,QAAQO,GACRN,KAAK,SACLC,MAAK,SAAAlC,GACJ,IACMkD,EADOnD,EAAeC,GAAU,GACjBI,GACrBsC,EAAY,QAAcQ,EAG1B3D,EACGsC,WACAC,IAAI,SACJhD,KAAK4D,GACLR,MAAK,WACJtF,eAAegG,QACb,UACA,+BAEF,EAAK1F,MAAM2B,QAAQC,KAAK,qB,EA2BxCgE,aAAe,WACb,IAAMT,EAAS,EAAK7E,MAAM6E,OAE1B,OAAOA,EACHA,EAAO7F,KAAI,SAACuC,EAAOoE,GACjB,OACE,uBAAG9C,IAAK8C,EAAO5G,UAAU,SACtB,IACAwC,MAIP,M,EAGN8D,aAAe,WACb,OAAO,EAAKrF,MAAM4E,UAChB,yBAAK7F,UAAU,WAAf,iBAEA,4BAAQA,UAAU,eAAeN,KAAK,UACnC,IADH,mB,sHAOM,IAAD,OACP,OACE,yBAAKM,UAAU,YACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,aACb,wBAAIA,UAAU,0BAAd,sBAEA,yBAAKA,UAAU,4BACb,0BAAMyC,SAAU,SAAAP,GAAK,OAAI,EAAKE,aAAaF,KACzC,yBAAKlC,UAAU,gBACb,2BACEN,KAAK,OACLgD,YAAY,aACZC,SAAU,SAAAT,GAAK,OACb,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,OAAQ2C,MAAM,KAE/CxE,MAAOP,KAAKR,MAAM8E,SAASvF,KAAKwB,SAIpC,yBAAKhC,UAAU,gBACb,2BACEN,KAAK,OACLgD,YAAY,cACZC,SAAU,SAAAT,GAAK,OACb,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,QAAS2C,MAAM,KAEhDxE,MAAOP,KAAKR,MAAM8E,SAASC,MAAMhE,SAIrC,yBAAKhC,UAAU,gBACb,2BACEN,KAAK,OACLgD,YAAY,iBACZC,SAAU,SAAAT,GAAK,OACb,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,WAAY2C,MAAM,KAEnDxE,MAAOP,KAAKR,MAAM8E,SAASE,SAASjE,SAIxC,yBAAKhC,UAAU,gBACb,2BACEN,KAAK,OACLgD,YAAY,gBACZC,SAAU,SAAAT,GAAK,OACb,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,UAAW2C,MAAM,KAElDxE,MAAOP,KAAKR,MAAM8E,SAASjB,QAAQ9C,SAIvC,yBAAKhC,UAAU,gBACb,4BACE2C,SAAU,SAAAT,GAAK,OACb,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,WAAY2C,MAAM,MAGnD,mDACA,4BAAQxE,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,cAAd,gBAIHP,KAAK8E,eAEL9E,KAAK6E,uB,GA/PG1E,aC8FRiF,E,2MAhGb5F,MAAQ,CACNlB,KAAM,KACN+G,OAAQ,KACRC,SAAU,M,EA8CZC,WAAa,WAGX,OAFiB,EAAK/F,MAAM8F,SAG1B,yBAAK/G,UAAU,gBACb,kBAAC,IAAD,CACEO,GAAE,kCAA6B,EAAKU,MAAM6F,QAC1C9G,UAAU,aAEV,uBAAGiH,MAAM,aAAaC,cAAY,SAClC,0CAGF,kBAAC,IAAD,CAAM3G,GAAE,sBAAiB,EAAKU,MAAM6F,QAAU9G,UAAU,aACtD,uBAAGiH,MAAM,mBACT,sCAGF,kBAAC,IAAD,CAAM1G,GAAE,uBAAkB,EAAKU,MAAM6F,QAAU9G,UAAU,cACvD,uBAAGiH,MAAM,0BACT,uCAGF,M,EAGNE,WAAa,WACX,IAAMJ,EAAW,EAAK9F,MAAM8F,SAE5B,OAAOA,EACL,wBAAI/G,UAAU,0BAAd,YAAiD+G,EAASvG,MACxD,M,mFA1Ee,IAAD,OACZT,EAAOM,eAAeC,QAAQ,QAEpC,GAAa,SAATP,GAA4B,UAATA,EAAkB,CACvC0B,KAAKC,SAAS,CACZ3B,SAIF,IAAM4G,EAAUtG,eAAeC,QAAQ,WAIvC0C,EACGsC,WACAC,IAFH,gBAEgBoB,IACbjB,KAAK,SACLC,MAAK,SAAAlC,GACJ,IAAMuC,EAAQvC,EAASM,MAAMiC,MAE7BhD,EACGsC,WACAC,IAAI,eACJC,aAAa,SACbC,QAAQO,GACRN,KAAK,SACLC,MAAK,SAAAlC,GACJ,IAAMsD,EAAWvD,EAAeC,GAAU,GACpCqD,EAASC,EAASlD,GAEpBiD,GACF,EAAKpF,SAAS,CACZoF,SACAC,wBAMZtF,KAAKd,MAAM2B,QAAQC,KAAK,Y,+BAyC1B,OAFA6C,QAAQC,IAAI5D,KAAKR,OAGf,6BACGQ,KAAK0F,aAEL1F,KAAKuF,kB,GA3FSpF,aC+BRwF,EAhCQ,WACrB,OACE,yBAAKpH,UAAU,aACb,wBAAIA,UAAU,0BACX,IADH,WAEU,uCAAmB,KAE7B,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMO,GAAG,aAAaP,UAAU,cAC9B,uBAAGiH,MAAM,iBACT,2CAGF,kBAAC,IAAD,CAAM1G,GAAG,eAAeP,UAAU,cAChC,uBAAGiH,MAAM,oBACT,0CAQF,kBAAC,IAAD,CAAM1G,GAAG,gBAAgBP,UAAU,cACjC,uBAAGiH,MAAM,0BACT,yCCiCKI,E,2MAxDbpG,MAAQ,CACNqG,SAAU,M,EA0BZN,WAAa,WACX,IAAMM,EAAW,EAAKrG,MAAMqG,SAE5B,OAAOA,EACL,yBAAKtH,UAAU,aACb,wBAAIA,UAAU,0BACX,IADH,WAEU,8BAAOsH,EAAS9G,MAAa,KAEvC,yBAAKR,UAAU,gBACb,kBAAC,IAAD,CAAMO,GAAE,gBAAW+G,EAASzD,IAAM7D,UAAU,cAC1C,uBAAGiH,MAAM,gBACT,yCAGF,kBAAC,IAAD,CAAM1G,GAAG,eAAeP,UAAU,cAChC,uBAAGiH,MAAM,0BACT,wCAIJ,M,mFA5Ce,IAAD,OAGZN,EAAUtG,eAAeC,QAAQ,WAC1BD,eAAeC,QAAQ,QAEpC0C,EACGsC,WACAC,IAAI,SACJC,aAAa,WACbC,QAAQkB,GACRjB,KAAK,SACLC,MAAK,SAAAlC,GACJ,IAAM6D,EAAW9D,EAAeC,GAAU,GAEtC6D,GACF,EAAK5F,SAAS,CACZ4F,kB,+BA+BR,OAAO,iCAAO7F,KAAKuF,aAAZ,S,GArDYpF,aC6CR2F,G,kNAzCbtG,MAAQ,CACNlB,KAAM,M,EAURiH,WAAa,WACX,IAAMjH,EAAO,EAAKkB,MAAMlB,KAExB,GAAIA,EACF,OAAQA,GACN,IAAK,WACH,OAAO,kBAAC,EAAD,MAET,IAAK,QACH,OAAO,kBAAC,EAAc,EAAKY,OAE7B,IAAK,OACH,OAAO,kBAAC,EAAa,EAAKA,OAE5B,QACE,OAAO,O,mFArBb,IAAMZ,EAAOM,eAAeC,QAAQ,QACpCmB,KAAKC,SAAS,CACZ3B,W,+BAyBF,OACE,6BACE,kBAAC,EAAD,MACA,6BAAM0B,KAAKuF,mB,GApCKpF,cCKT4F,EAVA,SAAA7G,GAOb,OAAO,kCALLN,eAAeoH,aAEf9G,EAAM2B,QAAQC,KAAK,a,gBC+GRmF,G,kNAvGXzG,MAAQ,CAEJuD,MAAO,M,EAyBXmD,YAAc,WAEV,IAAMnD,EAAQ,EAAKvD,MAAMuD,MAEzB,IAAKoD,IAAEC,QAAQrD,GAGX,OAAOA,EAAMvE,KAAI,SAAAyE,GAEb,OAAO,kBAAC,IAAD,CAAMnE,GAAE,sBAAiBmE,EAAKb,IAAM7D,UAAU,aAEjD,yBAAKA,UAAU,SAEX2E,MAAO,CACHC,gBAAgB,OAAD,OAASR,EAAT,QAIvB,yBAAKpE,UAAU,WAEX,qCAAW0E,EAAKlE,MAChB,yCAAekE,EAAKG,UACpB,wCAAcH,EAAKI,e,EAWvCgD,UAAY,WAIR,GAAa,UAFAzH,eAAeC,QAAQ,QAIhC,OAAO,kBAAC,IAAD,CAAMC,GAAG,4BAA4BP,UAAU,OAA/C,mB,oFA7DO,IAAD,OAIjBgD,EAASsC,WAAWC,IAAI,eAAeG,KAAK,SAASC,MAAK,SAAAlC,GAEtD,IAAMe,EAAQhB,EAAeC,GAEzBe,GAEA,EAAK9C,SAAS,CAEV8C,e,+BA0DZ,OAAO,6BAEH,kBAAC,EAAD,MACA,yBAAKxE,UAAU,aAEX,yBAAKA,UAAU,kBAEX,wBAAIA,UAAU,cAAd,uBAECyB,KAAKqG,aAGV,yBAAK9H,UAAU,gBAEVyB,KAAKkG,qB,GA5FA/F,c,SC0GXmG,G,OAjHU,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aA6CvCC,GA3CO9H,eAAeC,QAAQ,QA2CZ,SAAC8H,EAAUJ,GAE/B,OAAOA,EAAS/H,KAAI,SAAAoI,GAEhB,OAAOA,EAASD,WAAaA,EAAW,yBAAKpI,UAAU,aAEnD,yBAAKA,UAAU,SAAS2E,MAAO,CAC3BC,gBAAgB,OAAD,OAASyD,EAASC,MAAMC,QAAxB,QAInB,yBAAKvI,UAAU,QACX,uBAAGA,UAAU,aAAb,IAA2BqI,EAAS7H,KAApC,KACA,uBAAGR,UAAU,cAAb,aAAqCqI,EAASG,MAA9C,KAlDE,SAACH,GAEf,IAAMtI,EAAOM,eAAeC,QAAQ,QAIpC,OAFA8E,QAAQC,IAAIgD,GAEJtI,GAEJ,IAAK,WACD,OAAO,yBAAKC,UAAU,eAClB,4BAAQA,UAAU,eAAe2B,QAAS,kBAAMsG,EAAUI,KAA1D,mBAGR,IAAK,QAED,OAAO,yBAAKrI,UAAU,eAElB,kBAAC,IAAD,CAAMO,GAAE,gCAA2B8H,EAASxE,IAAM7D,UAAU,4BAA5D,UACA,4BAAQA,UAAU,kBAAlB,WAIR,IAAK,OAED,OAAO,yBAAKA,UAAU,eAElB,kBAAC,IAAD,CAAMO,GAAE,gCAA2B8H,EAASxE,IAAM7D,UAAU,4BAA5D,UACA,4BAAQA,UAAU,iBAAiB2B,QAAS,kBAAMuG,EAAaG,KAA/D,WAIR,QACI,OAAO,MAmBFP,CAAUO,KAIV,UA6BXI,EAAgB,WAElB,IAAML,EAAWJ,EAAS/H,KAAI,SAAAyD,GAE1B,OAAOA,EAAK0E,YAKhB,OAFU,YAAQ,IAAIM,IAAIN,KAM9B,OAAO,yBAAKpI,UAAU,gBAElB,wBAAIA,UAAU,cAAd,SArCmByI,EAAcT,GAIX/H,KAAI,SAAAmI,GAEtB,OAAO,6BACH,yBAAKpI,UAAU,aACX,wBAAIA,UAAU,YAAd,KAA4BoI,GAC5B,yBAAKpI,UAAU,gBACX,yBAAKA,UAAU,WACVmI,EAAgBC,EAAUJ,aCxBxCW,G,cAvDM,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,SAAiCC,GAA6B,EAApDhJ,KAAoD,EAA9CD,KAA8C,EAAxCkJ,UAAwC,EAA7BD,YAA6B,EAAjBE,WA+CjE,OAAO,6BA1CIH,EAAS3I,KAAI,SAAAC,GAEhB,OAAO,yBAAKF,UAAU,aAClB,wBAAIA,UAAU,aAAd,IAA4BE,EAAKM,KAAjC,KACA,uBAAGR,UAAU,cAAb,QAAgCE,EAAKsI,MAArC,KACA,uBAAGvB,MAAM,4BAA4BtF,QAAS,kBAAMkH,EAAW3I,UAKvD,WAEhB,IAAK0H,IAAEC,QAAQe,GAAW,CAEtB,IAAII,EAAQ,EASZ,OAPAJ,EAASjF,SAAQ,SAAAzD,GAEb8I,GAASC,SAAS/I,EAAKsI,UAKpB,6BAEH,uBAAGxI,UAAU,SAAb,WAA8BgJ,KAoBrCE,M,kOC8OMC,E,2MA1RXlI,MAAQ,CAEJ8F,SAAU,KACVqC,SAAU,KACVjI,KAAM,GACN2E,OAAQ,GACRuD,WAAW,G,EA6CfC,cAAgB,WAGZ,IAAM5E,EAAO,EAAKzD,MAAMyD,KAExB,OAAOA,EACH,yBAAK1E,UAAU,wBAEX,yBAAKA,UAAU,SAEX2E,MAAO,CACHC,gBAAgB,OAAD,OAASP,EAAT,QAGvB,wBAAIrE,UAAU,aAAa0E,EAAKlE,MAChC,uBAAGR,UAAU,YAAb,aAAmC0E,EAAKG,WACnC,M,EAIjBqD,aAAe,SAAChI,GAEZ,IAAMqJ,EAASrJ,EAAK2D,GAEduF,EAAW,EAAKnI,MAAMmI,SAExBI,EAAW,KACfJ,EAASzF,SAAQ,SAAC0E,EAAUzB,GAEpByB,EAASxE,KAAO0F,IAEhBC,EAAW5C,MAInBwC,EAASK,OAAOD,EAAU,GAE1BxG,EAASsC,WAAWC,IAApB,gBAAiCgE,IAAUG,SAAS/D,MAAK,WAErDP,QAAQC,IAAI,gBACZ,EAAK3D,SAAS,CACV0H,iB,EAQZO,WAAa,WAGT,IAAM3B,EAAW,EAAK/G,MAAMmI,SAG5B,IAAKxB,IAAEC,QAAQG,GAEX,OAAO,kBAAC,EAAD,CACHA,SAAUA,EACVC,UAAW,SAAC/H,GAAD,OAAU,EAAK+H,UAAU/H,IACpCgI,aAAc,SAAChI,GAAD,OAAU,EAAKgI,aAAahI,O,EAQtD+H,UAAY,SAAC/H,GAGTA,EAAK0J,OAAS,UACd1J,EAAK2J,SAAW,EAAK5I,MAAM8F,SAASvG,KACpC,IAAIW,EAAO,EAAKF,MAAME,KAClB2E,EAAS,GAIb,GAAK8B,IAAEC,QAAQ1G,GA+CR,CAGHA,EAAKoB,KAAKrC,GACV,IAAM0I,EAAWxH,KAAK0I,UAAU3I,GAChCd,eAAegG,QAAQ,OAAQuC,GAC/B,EAAKlH,SAAS,CACVP,cA1BJ,GAxBAA,EAAKwC,SAAQ,SAAAoG,GAELA,EAASjD,SAAW5G,EAAK4G,QAEzBhB,EAAOvD,KAAK,gDAQpBpB,EAAKwC,SAAS,SAAAoG,GAENA,EAASlG,KAAO3D,EAAK2D,IAErBiC,EAAOvD,KAAK,iCAQhBuD,EAAOxE,OAAS,EAEhB,EAAKI,SAAS,CACVoE,SACAuD,WAAW,QAEZ,CAIHlI,EAAKoB,KAAKrC,GACV,IAAM0I,EAAWxH,KAAK0I,UAAU3I,GAChCd,eAAegG,QAAQ,OAAQuC,GAC/B,EAAKlH,SAAS,CACVP,W,EAsBhB0H,WAAa,SAAC3I,GAEV,IAAMiB,EAAO,EAAKF,MAAME,KAIxBA,EAAKwC,SAAQ,SAACoG,EAAUnD,GAEhBmD,EAASlG,KAAO3D,EAAK2D,KAErB1C,EAAKsI,OAAO7C,EAAO,GACnBvG,eAAegG,QAAQ,OAAQjF,KAAK0I,UAAU3I,IAC9C,EAAKO,SAAS,CACVP,c,EAShB6I,WAAa,WAET,IAAM7I,EAAO,EAAKF,MAAME,KAExB,OAASyG,IAAEC,QAAQ1G,GAMV,KANmB,yBAAKnB,UAAU,kBAEvC,kBAAC,EAAD,CAAc4I,SAAUzH,EAAMvB,KAAK,kBAAkBC,KAAK,iBAAiBiJ,UAAW,EAAKA,UAAWD,WAAY,SAAC3I,GAAD,OAAU,EAAK2I,WAAW3I,MAE5I,kBAAC,IAAD,CAAMK,GAAG,iBAAiB0G,MAAM,4BAAhC,2B,EAOR6B,UAAY,WAGRzI,eAAewI,WAAW,QAC1B,EAAKnH,SAAS,CACVP,KAAM,M,EAId4D,YAAc,WAEV,IAAMe,EAAS,EAAK7E,MAAM6E,OAE1B,OAAO,EAAK7E,MAAMoI,UAAY,yBAAKrJ,UAAU,mBAEzC,yBAAKA,UAAU,SAEV8F,EAAO7F,KAAI,SAAAuC,GAER,OAAO,uBAAGxC,UAAU,SAAb,KAAwBwC,OAIvC,4BAAQxC,UAAU,eAAe2B,QAAS,kBAAM,EAAKD,SAAS,CAC1D2H,WAAW,MADf,YAGK,M,oFAtPS,IAAD,OAEXxF,EAAKpC,KAAKd,MAAMsJ,MAAMC,OAAOrG,GAE7B1C,EAAOC,KAAKC,MAAMhB,eAAeC,QAAQ,SAE1CsH,IAAEC,QAAQ1G,IAEXM,KAAKC,SAAS,CACVP,SAMR6B,EAASsC,WAAWC,IAApB,sBAAuC1B,IAAM6B,KAAK,SAASC,MAAK,SAAAlC,GAE5D,IAAMsD,E,yVAAQ,EAAKlD,GAAIJ,EAASK,KAAQL,EAASM,OAEjD,GAAIgD,EAAU,CAEV,IAAMD,EAASC,EAASlD,GAExBb,EAASsC,WAAWC,IAApB,SAAiCC,aAAa,UAAUC,QAAQqB,GAAQpB,KAAK,SAASC,MAAK,SAAAlC,GAEvF,IAAM2F,EAAW5F,EAAeC,GAChC2F,EAASS,SAAW9C,EAASvG,KAC7B,EAAKkB,SAAS,CACVqF,WACAqC,sB,+BAgOhB,OAAO,yBAAKpJ,UAAU,cAElB,kBAAC,EAAD,MACCyB,KAAK6H,gBACN,6BAEK7H,KAAKkI,aACLlI,KAAKuI,aACLvI,KAAKsD,oB,GAlRGnD,aCkCVuI,EArCE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAehB,OAAO,yBAAKpK,UAAU,qBAEjBoK,EAAMnK,KAAI,SAACoK,GAER,OAAO,kBAAC,IAAD,CAAM9J,GAAE,eAAU8J,EAAKxG,IAAM7D,UAAU,aAfjC,SAACqK,GAElB,IAAMC,EAAcD,EAAKC,YAEzB,OAAS1C,IAAEC,QAAQyC,GAGf,yBAAKtK,UAAU,OAAO2E,MAAO,CACzBC,gBAAgB,OAAD,OAASR,EAAT,QAJY,yBAAKpE,UAAU,OAAO2E,MAAO,CAC5DC,gBAAgB,OAAD,OAAS0F,EAAY/B,QAArB,QAYVgC,CAAaF,GAEd,yBAAKrK,UAAU,WACX,uBAAGA,UAAU,QAAb,SAA2BqK,EAAK7J,KAAhC,KACA,uBAAGR,UAAU,SAAb,WAA8BqK,EAAKrE,OACnC,uBAAGhG,UAAU,WAAb,aAAkCqK,EAAKvF,SACvC,uBAAG9E,UAAU,WAAb,UAA+BqK,EAAKtK,aCkEzCyK,E,2MAzFXvJ,MAAQ,CAEJmJ,MAAO,I,EAkCXK,KAAO,WAEH,IAAMrK,EAASC,eAAeC,QAAQ,UAChCP,EAAOM,eAAeC,QAAQ,QAE/BF,GAAmB,UAATL,GAEX,EAAKY,MAAM2B,QAAQC,KAAK,W,EAKhCmI,YAAc,WAEV,IAAMN,EAAQ,EAAKnJ,MAAMmJ,MAGzB,IAAKxC,IAAEC,QAAQuC,GAEX,OAAO,kBAAC,EAAD,CAAUA,MAAO,EAAKnJ,MAAMmJ,S,oFA9CrB,IAAD,OAOjBpH,EAASsC,WAAWC,IAAI,SAASG,KAAK,SAASC,MAAK,SAAAlC,GAEhD,IAAM2G,EAAQ5G,EAAeC,GAEvBkH,EAAYP,EAAMQ,QAAO,SAAAP,GAE3B,MAAqB,aAAdA,EAAKtK,QAGZqK,EAAM9I,OAAS,GAEf,EAAKI,SAAS,CACV0I,MAAOO,S,+BAqCnB,OAFAvF,QAAQC,IAAI5D,KAAKR,OAEV,6BAEH,kBAAC,EAAD,MAEA,yBAAKjB,UAAU,aAGX,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,cAAd,uBACA,kBAAC,IAAD,CAAMO,GAAG,iBAAiBP,UAAU,OAApC,iBAGJ,6BAEKyB,KAAKiJ,qB,GAlFF9I,aCUTiJ,EAdE,WACf,OACE,6BACE,kBAAC,EAAD,MAEA,6BACE,yBAAK7K,UAAU,kBACb,oDCqDK8K,G,2MArDX7J,MAAQ,CAEJmJ,MAAO,M,EAuBXM,YAAc,WAEV,IAAMN,EAAQ,EAAKnJ,MAAMmJ,MAEzB,OAASxC,IAAEC,QAAQuC,GAAuC,KAA7B,kBAAC,EAAD,CAAUA,MAAOA,K,mFAxB7B,IAAD,OAIhBpH,EAASsC,WAAWC,IAAI,SAASC,aAAa,QAAQC,QAAQ,SAASC,KAAK,SAASC,MAAK,SAAAlC,GAEtF,IAAM2G,EAAQ5G,EAAeC,GAExBmE,IAAEC,QAAQuC,IAEX,EAAK1I,SAAS,CAEV0I,e,+BAmBZ,OAAO,6BAEH,kBAAC,EAAD,MAEA,yBAAKpK,UAAU,aAEX,yBAAKA,UAAU,kBAAf,IAAiC,wBAAIA,UAAU,cAAd,kBAAjC,IAAgF,kBAAC,IAAD,CAAMA,UAAU,MAAMO,GAAG,kBAAzB,aAAhF,MAECkB,KAAKiJ,oB,GA9CD9I,aC4FNmJ,I,kNA1FX9J,MAAQ,CAEJ+J,OAAQ,I,EA4BZC,mBAAqB,SAACC,GAElB,OAAStD,IAAEC,QAAQqD,GAAU,EAAIA,EAAMjL,KAAI,SAAAC,GAEvC,OAAO,yBAAKF,UAAU,cAElB,oCAAUE,EAAKM,KAAf,KACA,qCAAWN,EAAKM,KAAhB,KACA,sCAAYN,EAAK0J,OAAjB,SAEH,M,EAETuB,iBAAmB,SAACD,GAEhB,OAAStD,IAAEC,QAAQqD,GAAiD,KAAvC,EAAKD,mBAAmBC,EAAMA,Q,EAI/DE,aAAe,WAEX,IAAMJ,EAAS,EAAK/J,MAAM+J,OAE1B,OAASpD,IAAEC,QAAQmD,GAed,KAfyBA,EAAO/K,KAAI,SAACiL,EAAOtE,GAI7C,OAFAA,GAAS,EAEF,6BAEH,yBAAK5G,UAAU,iBACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,eAAb,UAAmC4G,GAClC,EAAKuE,iBAAiBD,U,mFAxDtB,IAAD,OAGVvE,EAAUtG,eAAeC,QAAQ,WACvC8E,QAAQC,IAAIsB,GACZ3D,EAASsC,WAAWC,IAAI,UAAUC,aAAa,UAAUC,QAAQkB,GAASjB,KAAK,SAASC,MAAK,SAAAlC,GAEzF,IAAMuH,EAASxH,EAAeC,GAE9B2B,QAAQC,IAAI2F,GAEPpD,IAAEC,QAAQmD,IAEX,EAAKtJ,SAAS,CAEVsJ,gB,+BAyDZ,OADA5F,QAAQC,IAAI5D,KAAKR,OACV,6BAEH,kBAAC,EAAD,MAEA,wBAAIjB,UAAU,0BAAd,gBACCyB,KAAK2J,oB,GArFGxJ,cCwCNyJ,GAxCK,SAAC,GAAc,IAAZhB,EAAW,EAAXA,KAGnBjF,QAAQC,IAAIgF,GAsBZ,OAAO,yBAAKrK,UAAU,mBAXD,WAEjB,IAAMsK,EAAcD,EAAKC,YAEzB,OAAS1C,IAAEC,QAAQyC,GAGF,yBAAKtK,UAAU,OAAO2E,MAAO,CACtCC,gBAAgB,OAAD,OAASR,EAAT,OADN,KAFb,yBAAKpE,UAAU,OAAO2E,MAAO,CACzBC,gBAAgB,OAAD,OAAS0F,EAAY/B,QAArB,OADnB,KAOHgC,GACD,yBAAKvK,UAAU,WACX,uBAAGA,UAAU,QAAb,SAA2BqK,EAAK7J,MAChC,uBAAGR,UAAU,SAAb,UAA6BqK,EAAKrE,OAClC,uBAAGhG,UAAU,WAAb,YAAiCqK,EAAKvF,SACtC,uBAAG9E,UAAU,YAAb,aAAmCqK,EAAKxF,SAAxC,KACA,uBAAG7E,UAAU,QAAb,UAA4BqK,EAAKtK,KAAjC,KA1BYM,eAAeC,QAAQ,aAEnB+J,EAAK1D,QAAW,kBAAC,IAAD,CAAMpG,GAAG,sBAAsBP,UAAU,mBAAzC,mBAAoF,Q,0OC6DjHsL,G,2MAlEXrK,MAAQ,CAEJoJ,KAAM,M,EA0BVkB,WAAa,WAGT,IAAMlB,EAAO,EAAKpJ,MAAMoJ,KAExB,IAAKzC,IAAEC,QAAQwC,GAEX,OAAO,kBAAC,GAAD,CAAaA,KAAMA,K,mFA7Bb,IAAD,OAGVjK,EAASqB,KAAKd,MAAMsJ,MAAMC,OAAOrG,GAGvCb,EAASsC,WAAWC,IAApB,gBAAiCnF,IAAUsF,KAAK,SAASC,MAAK,SAAAlC,GAE1D,IAAM4G,E,2VAAI,EAAKxG,GAAIJ,EAASK,KAAQL,EAASM,OAGzCsG,GAEA,EAAK3I,SAAS,CACV2I,c,+BAyBZ,OAAO,yBAAKrK,UAAU,WAElB,kBAAC,EAAD,MACA,yBAAKA,UAAU,aAEX,wBAAIA,UAAU,0BAAd,aACCyB,KAAK8J,cAKV,mC,GA3DO3J,a,mOC6NJ4J,G,2MA3NXvK,MAAQ,CAEJ6E,OAAQ,KAERC,SAAU,CAENvF,KAAM,CAEFwB,MAAO,GACPD,UAAU,GAGdiE,MAAO,CACHhE,MAAO,GACPD,UAAU,GAGd+C,QAAS,CACL9C,MAAO,GACPD,UAAU,GAGd8C,SAAU,CAEN7C,MAAO,GACPD,UAAU,GAGdhC,KAAM,CAEFiC,MAAO,GACPD,UAAU,K,EAQtBE,aAAe,SAACxB,GAEZ,IAAMgL,E,2VAAW,IAEV,EAAKxK,MAAM8E,UAGlB0F,EAAYhL,EAAQoD,IAAI7B,MAAQvB,EAAQyB,MAAMC,OAAOH,MAErD,EAAKN,SAAS,CACVqE,SAAU0F,K,EAKlBrJ,aAAe,SAACF,GAEZA,EAAMG,iBAEN,IAAIyD,EAAS,GAEPC,EAAW,EAAK9E,MAAM8E,SACxBI,EAAe,GAGnB,IAAK,IAAIrC,KAAOiC,EAIRA,EAASjC,GAAK/B,UAAoC,KAAxBgE,EAASjC,GAAK9B,OAExC8D,EAAOvD,KAAP,UAAeuB,EAAf,iBAGJqC,EAAarC,GAAOiC,EAASjC,GAAK9B,MAIlC8D,EAAOxE,OAAS,GAEhB8D,QAAQC,IAAIS,GACZ,EAAKpE,SAAS,CAEVoE,aAIJV,QAAQC,IAAI,gBAEZ,EAAK3D,SAAS,CACVoE,OAAQ,OAIZK,EAAY,UAAgBnC,IAE5BhB,EAASsC,WAAWC,IAAI,SAAShD,KAAK4D,GAAcR,MAAK,WAIrD3C,EAASsC,WAAWC,IAAI,SAASC,aAAa,aAAakG,YAAY,GAAGhG,KAAK,SAASC,MAAK,SAAAlC,GAEzF,IAAMrD,EAASoD,EAAeC,GAAU,GAAGI,GAEvCzD,IAEAgF,QAAQC,IAAIjF,GAEZ,EAAKsB,SAAS,CAEViK,QAASvL,a,EAYjCmG,aAAe,WAEX,IAAMT,EAAS,EAAK7E,MAAM6E,OAE1B,OAAOA,EAASA,EAAO7F,KAAI,SAAAuC,GAAK,OAAI,uBAAGxC,UAAU,SAAb,IAAuBwC,EAAvB,QAAsC,M,EAI9EoJ,cAAgB,WAGZxG,QAAQC,IAAI,EAAKpE,OAEjB,IAAM0K,EAAU,EAAK1K,MAAM0K,QAE3B,GAAIA,EAEA,OAAO,kBAAC,IAAD,CAAMpL,GAAE,gBAAWoL,GAAW3L,UAAU,QAAxC,6B,wEAIL,IAAD,OAEL,OAAO,yBAAKA,UAAU,YAElB,kBAAC,EAAD,MAEA,yBAAKA,UAAU,aAEX,wBAAIA,UAAU,0BAAd,cACA,yBAAKA,UAAU,gBAEX,0BAAMyC,SAAU,SAACP,GAAD,OAAW,EAAKE,aAAaF,KACzC,yBAAKlC,UAAU,gBACX,2BAAON,KAAK,OAAOgD,YAAY,OAC3BC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,UAEpD7B,MAAOP,KAAKR,MAAM8E,SAASvF,KAAKwB,SAIxC,yBAAKhC,UAAU,gBACX,2BAAON,KAAK,OAAOgD,YAAY,QAE3BC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,WAEpD7B,MAAOP,KAAKR,MAAM8E,SAASC,MAAMhE,SAKzC,yBAAKhC,UAAU,gBACX,2BAAON,KAAK,OAAOgD,YAAY,WAE3BC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,cAEpD7B,MAAOP,KAAKR,MAAM8E,SAASlB,SAAS7C,SAK5C,yBAAKhC,UAAU,gBACX,2BAAON,KAAK,SAASgD,YAAY,UAE7BC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,aAEpD7B,MAAOP,KAAKR,MAAM8E,SAASjB,QAAQ9C,SAK3C,yBAAKhC,UAAU,gBAEX,4BAAQA,UAAU,SAEd2C,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,UAEpD7B,MAAOP,KAAKR,MAAM8E,SAAShG,KAAKiC,OAEhC,4BAAQA,MAAM,IAAd,iBACA,4BAAQA,MAAM,YAAd,cACA,4BAAQA,MAAM,SAAd,aAIPP,KAAK8E,eACL9E,KAAKmK,gBAEN,4BAAQlM,KAAK,SAASc,KAAK,UAA3B,4B,GApNFoB,a,mOCmQPiK,G,2MAjQX5K,MAAQ,CAEJ6E,OAAQ,KACRgG,QAAS,KAET/F,SAAU,CAENvF,KAAM,CACFwB,MAAO,GACPD,UAAU,GAGdiE,MAAO,CAEHhE,MAAO,GACPD,UAAU,GAGd+C,QAAS,CACL9C,MAAO,GACPD,UAAU,GAGd8C,SAAU,CAEN7C,MAAO,GACPD,UAAU,K,EAOtBE,aAAe,SAACxB,GAEZ,IAAMgL,E,2VAAW,IAEV,EAAKxK,MAAM8E,UAGlB0F,EAAYhL,EAAQoD,IAAI7B,MAAQvB,EAAQyB,MAAMC,OAAOH,MAErD,EAAKN,SAAS,CACVqE,SAAU0F,K,EAOlBrJ,aAAe,SAACF,GAEZA,EAAMG,iBAEN,IAAI0D,EAAW,EAAK9E,MAAM8E,SACtBD,EAAS,GAETK,EAAe,GAEnB,IAAK,IAAIrC,KAAOiC,EAEZI,EAAarC,GAAOiC,EAASjC,GAAK9B,MAG9B+D,EAASjC,GAAK/B,UAAoC,KAAxBgE,EAASjC,GAAK9B,OACxC8D,EAAOvD,KAAP,UAAeuB,EAAf,iBAKR,GAAIgC,EAAOxE,OAAS,EAEhB,EAAKI,SAAS,CAEVoE,eAJR,CASI,EAAKpE,SAAS,CAEVoE,OAAQ,OAIZK,EAAY,SAAe,WAC3BA,EAAY,UAAgBnC,IAE5B,IAAMoC,EAAY,CAEdJ,MAAOG,EAAaH,MACpBC,SAAUE,EAAaF,SACvBlG,KAAM,OACN2G,UAAW1C,KAKfhB,EAASsC,WAAWC,IAAI,SAAShD,KAAK6D,GAAWT,MAAK,WAElD3C,EAASsC,WAAWC,IAAI,SAASC,aAAa,SAASC,QAAQU,EAAaH,OAAON,KAAK,SAASC,MAAK,SAAAlC,GAElG,IAAMkD,EAAUnD,EAAeC,GAAU,GAAGI,GAE5CsC,EAAY,QAAcQ,EAE1B3D,EAASsC,WAAWC,IAAI,eAAehD,KAAK4D,GAAcR,MAAK,SAAAlC,GAE3DpD,eAAegG,QAAQ,UAAW,gCAClC,EAAK1F,MAAM2B,QAAQC,KAAK,yB,EA0C5CgE,aAAe,WAEX,IAAMT,EAAS,EAAK7E,MAAM6E,OAE1B,OAAOA,EAASA,EAAO7F,KAAI,SAAAuC,GAAK,OAAI,uBAAGxC,UAAU,SAAb,IAAuBwC,EAAvB,QAAsC,M,EAI9EuJ,cAAgB,WAEZ,IAAMD,EAAU,EAAK7K,MAAM6K,QAE3B,OAAOA,EAAU,kBAAC,IAAD,CAAMvL,GAAE,sBAAiBuL,GAAW9L,UAAU,YAA9C,kCAAiG,M,wEAI5G,IAAD,OAEL,OAAO,6BAEH,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACX,wBAAIA,UAAU,0BAAd,kBAEA,yBAAKA,UAAU,gBAEX,0BAAMyC,SAAU,SAACP,GAAD,OAAW,EAAKE,aAAaF,KAEzC,yBAAKlC,UAAU,gBACX,2BAAON,KAAK,OAAOgD,YAAY,2BAE3BC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,UAGpD7B,MAAOP,KAAKR,MAAM8E,SAASvF,KAAKwB,SAMxC,yBAAKhC,UAAU,gBACX,2BAAON,KAAK,OAAOgD,YAAY,cAE3BC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,WAEpD7B,MAAOP,KAAKR,MAAM8E,SAASC,MAAMhE,SAKzC,yBAAKhC,UAAU,gBACX,2BAAON,KAAK,SAASgD,YAAY,gBAE7BC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,aAEpD7B,MAAOP,KAAKR,MAAM8E,SAASjB,QAAQ9C,SAK3C,yBAAKhC,UAAU,gBAEX,oDAEA,4BACI2C,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,eAEpD,4BAAQ7B,MAAM,YAAd,yBACA,4BAAQA,MAAM,YAAd,cAEA,4BAAQA,MAAM,OAAd,SACA,4BAAQA,MAAM,cAAd,gBAEA,4BAAQA,MAAM,WAAd,eAmBPP,KAAK8E,eACL9E,KAAKsK,gBAEN,4BAAQrM,KAAK,UAAb,4B,GAxPIkC,a,qBCgGboK,I,kNA/FX/K,MAAQ,CACJgL,SAAU,GACVC,OAAQ,GACRC,aAAa,EACbC,SAAU,EACVC,UAAW,I,EAIfC,kBAAoB,WAEhB,EAAK5K,SAAS,CACVyK,aAAa,EACbC,SAAU,K,EAKlBG,kBAAoB,WAEhB,EAAK7K,SAAS,CACVyK,aAAa,EACbC,SAAU,K,EAIlBI,eAAiB,SAACJ,GAEd,EAAK1K,SAAS,CACV0K,c,EAIRK,oBAAsB,SAACC,GAEnB,EAAKhL,SAAS,CACVwK,OAAQQ,EACRN,SAAU,IACVD,aAAa,IAIjBnJ,EAAS2J,UAAUpH,IAAI,UAAUqH,MAAMF,GAAUG,iBAAiBlH,MAAK,SAAAmH,GAEnE,EAAKpL,SAAS,CACV2K,UAAWS,IAGf,IAAMC,EAAW,CACbL,SAAUA,EACVnE,QAASuE,GAGb,EAAKnM,MAAMqM,cAAcD,O,EAIjCxC,aAAe,WAEX,IAAM0C,EAAY,EAAKhM,MAAMoL,UAI7B,OAAOY,EAAY,yBAAKjN,UAAU,QAAQ2E,MAAO,CAC7CC,gBAAgB,OAAD,OAASqI,EAAT,KACfC,MAAO,OACPC,OAAQ,QACRC,eAAgB,WAGX,M,wEAOT,OAAO,6BAEH,kBAAC,KAAD,CACIC,OAAO,UACP7M,KAAK,SACL8M,mBAAiB,EACjBC,WAAYvK,EAAS2J,UAAUpH,IAAI,UACnCiI,cAAe/L,KAAK6K,kBACpBmB,cAAehM,KAAK8K,kBACpBmB,gBAAiBjM,KAAKgL,oBACtBkB,WAAYlM,KAAK+K,iBAEpB/K,KAAK8I,oB,GA3FK3I,cC0NRgM,G,2MAtNX3M,MAAQ,CAEJ6F,OAAQ,EAAKnG,MAAMsJ,MAAMC,OAAOrG,GAChCkD,SAAU,KAEVhB,SAAU,CAENvF,KAAM,CACFuB,UAAU,EACVC,MAAO,IAGXwG,MAAO,CAEHzG,UAAU,EACVC,MAAO,IAGXoG,SAAU,CACNrG,UAAU,EACVC,MAAO,IAGXsG,MAAO,CACHvG,UAAU,EACVC,MAAO,CACH0K,SAAU,UACVnE,QAASjE,M,EAiCzBlC,aAAe,SAACyL,GAEZA,EAAExL,iBAEF,IAAI8D,EAAe,GACbJ,EAAW,EAAK9E,MAAM8E,SAExBD,GADW,EAAK7E,MAAM6F,OACb,IAGb,IAAK,IAAIhD,KAAOiC,EAEZI,EAAarC,GAAOiC,EAASjC,GAAK9B,MAG9B+D,EAASjC,GAAK/B,UAAoC,KAAxBgE,EAASjC,GAAK9B,OAExC8D,EAAOvD,KAAP,UAAeuB,EAAf,iBAOJgC,EAAOxE,OAAS,EAGhB,EAAKI,SAAS,CAEVoE,YAOJK,EAAY,OAAa,EAAKxF,MAAMsJ,MAAMC,OAAOrG,GAEjDb,EAASsC,WAAWC,IAAI,SAAShD,KAAK4D,GAAcR,MAAK,WAErDtF,eAAegG,QAAQ,UAAW,2BAClC,EAAK1F,MAAM2B,QAAQC,KAAK,mB,EAQpCN,aAAe,SAACxB,GAEZ,IAAMsF,EAAW,EAAK9E,MAAM8E,SACtBG,EAAQH,EAAStF,EAAQoD,IAE/BqC,EAAMlE,MAAQvB,EAAQyB,MAAMC,OAAOH,MAEnC+D,EAAStF,EAAQoD,IAAMqC,EAEvB,EAAKxE,SAAS,CACVqE,c,EAIRQ,aAAe,WAEX,IAAMT,EAAS,EAAK7E,MAAM6E,OAE1B,OAAOA,EAASA,EAAO7F,KAAI,SAAAuC,GAAK,OAAI,uBAAGxC,UAAU,SAAb,IAAuBwC,EAAvB,QAAsC,M,EAI9EwK,cAAgB,SAACD,GAEb,IAAMhH,EAAW,EAAK9E,MAAM8E,SAE5BA,EAAQ,MAAU/D,MAAQ+K,EAE1B,EAAKrL,SAAS,CAEVqE,c,mFAzGa,IAAD,OAEVe,EAASrF,KAAKd,MAAMsJ,MAAMC,OAAOrG,GAGvCb,EAASsC,WAAWC,IAApB,sBAAuCuB,IAAUpB,KAAK,SAASC,MAAK,SAAAlC,GAEhE,IAAMsD,EAAWtD,EAASM,MAEtBgD,GAEA,EAAKrF,SAAS,CACVqF,kB,+BAkGN,IAAD,OAIL,OAFA3B,QAAQC,IAAI5D,KAAKR,OAEV,6BAGH,6BAEI,kBAAC,EAAD,MAEA,wBAAIjB,UAAU,0BAAd,mBACA,yBAAKA,UAAU,gBAEX,0BAAMyC,SAAUhB,KAAKW,cAGjB,yBAAKpC,UAAU,gBACX,0CACA,kBAAC,GAAD,CAAUgN,cAAe,SAACN,GAAD,OAAc,EAAKM,cAAcN,OAI9D,yBAAK1M,UAAU,gBACX,2BACIN,KAAK,OAAOgD,YAAY,aACxBC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,UACpD7B,MAAOP,KAAKR,MAAM8E,SAASvF,KAAKwB,SAMxC,yBAAKhC,UAAU,gBACX,2BACIN,KAAK,SAASgD,YAAY,qBAC1BC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,WACpD7B,MAAOP,KAAKR,MAAM8E,SAASvF,KAAKgI,SAIxC,yBAAKxI,UAAU,gBAEX,4BAEI2C,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,eAIpD,4BAAQ7B,MAAM,IAAd,sBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,aAMPP,KAAK8E,eACN,4BAAQ7G,KAAK,UAAb,wB,GA/MEkC,aC0KXkM,G,2MAtKX7M,MAAQ,CAEJ8M,MAAO,KACPhH,SAAU,KACV5F,KAAM,I,EAoDViB,aAAe,SAACF,GAEZA,EAAMG,iBAEN,IAAMlB,EAAO,EAAKF,MAAME,KAElBjB,EAAOgC,EAAMC,OAAOjC,KAAK8B,MAC3BgM,EAAW/E,SAAS/G,EAAMC,OAAO6L,SAAShM,OACxCwG,EAAQS,SAAS/G,EAAMC,OAAOqG,MAAMxG,OAErCgM,IAEDA,EAAW,GAGf,IAEM7H,EAAe,CACjBjG,OACA8N,WACAxF,QACAyF,SANazF,EAAQwF,GASzB7M,EAAKoB,KAAK4D,GAEVf,QAAQC,IAAIlE,I,EAShBwI,WAAa,WAGT,IAAMoE,EAAQ,EAAK9M,MAAM8M,MAIzB,OAAOA,EAAQ,kBAAC,EAAD,CAAkB/F,SAAU+F,EAAO3L,aAAc,SAACF,GAAD,OAAW,EAAKE,aAAaF,MAAa,M,EAM9GiG,gBAAkB,SAACjI,GAUf,OAPc,EAAKe,MAAM8M,MAELnD,QAAO,SAAAsD,GAEvB,OAAOA,EAAK9F,WAAalI,KAGhBD,KAAI,SAAAyD,GAEb,OAAO,yBAAK1D,UAAU,gBAElB,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,WACX,qCAAW0D,EAAKlD,KAAhB,KACA,sCAAYkD,EAAK8E,MAAjB,W,EAOhBc,cAAgB,WAEZ,IAAMvC,EAAW,EAAK9F,MAAM8F,SAI5B,OAAOA,EAAW,yBAAK/G,UAAU,wBAE7B,yBAAKA,UAAU,SAAS2E,MAAO,CAC3BC,gBAAgB,OAAD,OAASP,EAAT,OADnB,KAGA,wBAAIrE,UAAU,aAAd,IAA4B+G,EAASvG,KAArC,KACA,uBAAGR,UAAU,YAAb,aAAmC+G,EAASlC,SAA5C,MAEK,M,oFAvIS,IAAD,OAEXiC,EAASrF,KAAKd,MAAMsJ,MAAMC,OAAOrG,GAIvCb,EAASsC,WAAWC,IAApB,sBAAuCuB,IAAUpB,KAAK,SAASC,MAAK,SAAAlC,GAGhE,IAAMsD,EAAWtD,EAASM,MAE1Bf,EAASsC,WAAWC,IAApB,SAAiCC,aAAa,UAAUC,QAAQqB,GAAQpB,KAAK,SAASC,MAAK,SAAAlC,GAEvF,IAAMsK,EAAQvK,EAAeC,GAEvBC,EAAOqK,EAAMI,MAAK,SAACC,EAAGC,GAExB,OAAID,EAAEhG,SAAWiG,EAAEjG,SAER,GAGC,KASZ2F,GAEA,EAAKrM,SAAS,CACVqM,MAAOrK,EACPqD,qB,+BA6GhB,OAFA3B,QAAQC,IAAI5D,KAAKR,OAEV,6BAEH,kBAAC,EAAD,MAGCQ,KAAK6H,gBAEN,6BACK7H,KAAKkI,mB,GAnKH/H,aCyKJ0M,I,kNAvKbrN,MAAQ,CACNE,KAAM,KACNoN,SAAU,KACVxH,SAAU,M,EAoDZ+B,UAAY,WACG,EAAK7H,MAAME,KACxBd,eAAewI,WAAW,QAC1B,EAAKnH,SAAS,CACZP,KAAM,M,EAIV0H,WAAa,SAAA3I,GACX,IAAMiB,EAAO,EAAKF,MAAME,KAEnByG,IAAEC,QAAQ1G,IACbA,EAAKwC,SAAQ,SAACoG,EAAUnD,GAClBmD,EAASlG,KAAO3D,EAAK2D,KACvB1C,EAAKsI,OAAO7C,EAAO,GACnBvG,eAAegG,QAAQ,OAAQjF,KAAK0I,UAAU3I,IAC9C,EAAKO,SAAS,CACZP,c,EAOV6I,WAAa,WACX,IAAM7I,EAAO,EAAKF,MAAME,KAExB,OAAQyG,IAAEC,QAAQ1G,GAYhB,wBAAInB,UAAU,0BAAd,mBAXA,6BACE,wBAAIA,UAAU,0BAAd,eACA,kBAAC,EAAD,CACE4I,SAAUzH,EACVvB,KAAK,cACLC,KAAK,wBACLiJ,UAAW,kBAAM,EAAKA,aACtBD,WAAY,SAAA3I,GAAI,OAAI,EAAK2I,WAAW3I,Q,EAQ5C6I,WAAa,WACX,IAAM5H,EAAO,EAAKF,MAAME,KAClBoN,EAAW,EAAKtN,MAAMsN,SACtBxH,EAAW,EAAK9F,MAAM8F,SAEhB3G,EAAoDmO,EAAxD1K,GAAYrD,EAA4C+N,EAA5C/N,KAAMmG,EAAsC4H,EAAtC5H,QAAS9B,EAA6B0J,EAA7B1J,SAAUC,EAAmByJ,EAAnBzJ,QAASkB,EAAUuI,EAAVvI,MAEtD,GAAIuI,EAAU,CACZ,IASMC,EAAY,CAChBtD,MAAO/J,EACPoN,SAXe,CACf/N,OACAJ,SACAuG,UACA9B,WACAC,UACAkB,SAMAe,WACA6C,OAAQ,UACRlD,UAAW1C,KAIbhB,EACGsC,WACAC,IAAI,UACJhD,KAAKiM,GACL7I,MAAK,WAEJtF,eAAewI,WAAW,QAC1B,EAAKnH,SAAS,CACZP,KAAM,KAER,EAAKR,MAAM2B,QAAQC,KAAK,mB,EAKhCuF,UAAY,WACV,IAAM3G,EAAO,EAAKF,MAAME,KAExB,OAAQyG,IAAEC,QAAQ1G,GAQd,KAPF,yBACEnB,UAAU,2BACV2B,QAAS,kBAAM,EAAKoH,eAEnB,IAJH,eAKe,M,mFA9IE,IAAD,OACZ5H,EAAOC,KAAKC,MAAMhB,eAAeC,QAAQ,SAE/C,GAAIa,EAAM,CAER,IAAMwF,EAAUtG,eAAeC,QAAQ,WAGjCmO,EAAUtN,EAAKlB,KAAI,SAAAC,GACvB,OAAOA,EAAK4G,UAGd1B,QAAQC,IAAIoJ,GAGZ,IAAM3H,EAAS2H,EAAQ,GAEvBrJ,QAAQC,IAAIyB,GAIZ9D,EACGsC,WACAC,IAAI,SACJC,aAAa,WACbC,QAAQkB,GACRjB,KAAK,SACLC,MAAK,SAAAlC,GACJ,IAAM8K,EAAW/K,EAAeC,GAAU,GACrCmE,IAAEC,QAAQ0G,IAEbvL,EACGsC,WACAC,IAFH,sBAEsBuB,IACnBpB,KAAK,SACLC,MAAK,SAAAlC,GACJ,IAAMsD,EAAWtD,EAASM,MAE1B,EAAKrC,SAAS,CACZP,OACAoN,WACAxH,sB,+BA4Gd,OACE,6BACE,kBAAC,EAAD,MACA,yBAAK/G,UAAU,kBACZyB,KAAKuI,aACLvI,KAAKqG,kB,GAjKOlG,cC8LR8M,G,2MA7LXzN,MAAQ,CAEJ+J,OAAQ,M,EAyCZ2D,cAAgB,SAACC,GAEb,IAAM5D,EAAS,EAAK/J,MAAM+J,OAE1B,IAAKpD,IAAEC,QAAQmD,GAAS,CAEpB,IAAME,EAAQF,EAAO6D,MAAK,SAAA3D,GAEtB,OAAOA,EAAMrH,KAAO+K,KAIxB1D,EAAMtB,OAAS,WAEfoB,EAAO4D,GAAW1D,EAIlBlI,EAASsC,WAAWC,IAApB,iBAAkCqJ,IAAWE,OAAO,CAChDlF,OAAQ,aACTjE,MAAK,WAGJ,EAAKjE,SAAS,CAEVsJ,gB,EAUhB+D,YAAc,SAACH,GAEX,IAAM5D,EAAS,EAAK/J,MAAM+J,OACtBxB,EAAW,KACfwB,EAAOrH,SAAQ,SAACuH,EAAOtE,GAEfsE,EAAMrH,KAAO+K,IAEbpF,EAAW5C,MAQnB5D,EAASsC,WAAWC,IAApB,iBAAkCqJ,IAAWlF,SAAS/D,MAAK,WAEvDqF,EAAOvB,OAAOD,EAAU,GAExB,EAAK9H,SAAS,CAEVsJ,e,EASZlD,UAAY,SAACoD,GAKT,OAHeA,EAAMtB,QAMjB,IAAK,WACD,OAAO,4BAAQ5J,UAAU,iBAAiB2B,QAAS,kBAAM,EAAKoN,YAAY7D,EAAMrH,MAAzE,iBAEX,IAAK,UACD,OAAO,4BAAQ7D,UAAU,kBAAkB2B,QAAS,kBAAM,EAAKgN,cAAczD,EAAMrH,MAA5E,kBACX,QACI,OAAO,O,EAMnBmL,YAAc,WAEV,IAAMhE,EAAS,EAAK/J,MAAM+J,OAG1B,OAAKpD,IAAEC,QAAQmD,GA6BJ,yBAAKhL,UAAU,YAAf,eA3BAgL,EAAO/K,KAAI,SAAAiL,GAEd,OAAO,yBAAKlL,UAAU,cAElB,yBAAKA,UAAU,aAEX,wBAAIA,UAAU,QAAd,SAA4BkL,EAAMqD,SAAS/N,MAC3C,uBAAGR,UAAU,YAAb,cAAoCkL,EAAMqD,SAAS1J,UACnD,uBAAG7E,UAAU,WAAb,aAAkCkL,EAAMqD,SAASzJ,SACjD,uBAAG9E,UAAU,WAAb,UAA+BkL,EAAMxE,YAGzC,6BAEKwE,EAAMA,MAAMjL,KAAI,SAAAC,GACb,OAAO,+BAAKA,EAAKM,UAKzB,uCAAa0K,EAAMtB,QAElB,EAAK9B,UAAUoD,Q,EAShC+D,aAAe,WAEX7J,QAAQC,IAAI,qB,mFAnKK,IAAD,OAKVsB,EAAUtG,eAAeC,QAAQ,WAOvC0C,EAASsC,WAAWC,IAAI,UAAUC,aAAa,aAAaE,KAAK,SAASC,MAAK,SAAAlC,GAE3E,IAAMuH,EAASxH,EAAeC,GAE9B,IAAKmE,IAAEC,QAAQmD,GAAS,CAGpB,IAAMkE,EAAalE,EAAOJ,QAAO,SAAAM,GAE7B,OAAOA,EAAMnE,SAASJ,UAAYA,KAIjCiB,IAAEC,QAAQqH,IAEX,EAAKxN,SAAS,CAEVsJ,OAAQkE,U,+BA2IxB,OAAO,6BAEH,kBAAC,EAAD,MACA,wBAAIlP,UAAU,0BAAd,mBAEA,yBAAKA,UAAU,uBACVyB,KAAKuN,oB,GAvLGpN,aC0HVuN,I,kNAxHXlO,MAAQ,CAEJ+J,OAAQ,M,EAsCZgE,YAAc,WAEV,IAAMhE,EAAS,EAAK/J,MAAM+J,OAE1B,IAAKpD,IAAEC,QAAQmD,GAEX,OAAOA,EAAO/K,KAAI,SAAAiL,GAEd,OAAO,yBAAKlL,UAAU,mBAElB,uBAAGA,UAAU,QAAb,UAA4BkL,EAAMxE,WAClC,uBAAG1G,UAAU,UAAb,YAAgCkL,EAAMtB,QACtC,uBAAG5J,UAAU,cAAb,iBAECkL,EAAMA,MAAMjL,KAAI,SAAAC,GAGb,OADAkF,QAAQC,IAAInF,GACL,yBAAKF,UAAU,cAClB,yBAAKA,UAAU,cAAc2E,MAAO,CAChCC,gBAAgB,OAAD,OAAS1E,EAAKoI,MAAMC,QAApB,QAEnB,yBAAKvI,UAAU,WACX,uBAAGA,UAAU,aAAb,UAAiCE,EAAKM,MACtC,uBAAGR,UAAU,cAAb,cAAsCE,EAAKsI,iB,EAUvEyG,aAAe,WAEE,EAAKhO,MAAM+J,OAEjBrH,SAAQ,SAAAuH,GAEXlI,EAASsC,WAAWC,IAApB,iBAAkC2F,EAAMrH,KAAM6F,SAAS/D,MAAK,WAGxD,EAAKjE,SAAS,CAEVsJ,OAAQ,c,EAUxBlD,UAAY,WAER,OAAO,EAAK7G,MAAM+J,OAAS,yBAAKhL,UAAU,2BAA2B2B,QAAS,kBAAM,EAAKsN,iBAA9D,mBAAsG,M,oFA3F/G,IAAD,OAIXtI,EAAUtG,eAAeC,QAAQ,WAGvC0C,EAASsC,WAAWC,IAAI,UAAUG,KAAK,SAASC,MAAK,SAAAlC,GAEjD,IAGM+K,EAHShL,EAAeC,GAGLmH,QAAO,SAAAM,GAE5B,OAAOA,EAAMqD,SAAS5H,UAAYA,KAIjCiB,IAAEC,QAAQ2G,IAGX,EAAK9M,SAAS,CAEVsJ,OAAQwD,S,+BAwEpB,OAAO,6BAEH,kBAAC,EAAD,MAEA,wBAAIxO,UAAU,0BAAd,oBAEA,yBAAKA,UAAU,sBAEVyB,KAAKuN,cAELvN,KAAKqG,kB,GAhHElG,cC6DTwN,G,2MA7DbnO,MAAQ,CACN+J,OAAQ,M,EAmBVI,aAAe,WACb,IAAMJ,EAAS,EAAK/J,MAAM+J,OAC1B,IAAKpD,IAAEC,QAAQmD,GACb,OAAOA,EAAO/K,KAAI,SAAAiL,GAChB,OACE,yBAAKlL,UAAU,cACb,2CAAiBkL,EAAMxE,WACvB,6CAAmBwE,EAAMtB,QACzB,0CACA,+BAAKsB,EAAMqD,SAAS/N,KAApB,KACA,+BAAK0K,EAAMqD,SAAS1J,SAApB,KACA,+BAAKqG,EAAMqD,SAASzJ,QAApB,KACA,+BAAKoG,EAAMqD,SAASvI,MAApB,KACCZ,QAAQC,IAAI6F,GACb,+CACCA,EAAMA,MAAMjL,KAAI,SAAAC,GACf,OACE,6BACE,+BAAKA,EAAKM,UAblB,S,mFArBa,IAAD,OAClBwC,EACGsC,WACAC,IAAI,UACJG,KAAK,SACLC,MAAK,SAAAlC,GACJ,IAAMuH,EAASxH,EAAeC,GAEzBmE,IAAEC,QAAQmD,IACb,EAAKtJ,SAAS,CACZsJ,gB,+BAoCR,OACE,6BACE,kBAAC,EAAD,MACA,wBAAIhL,UAAU,0BAAd,mBAECyB,KAAK2J,oB,GAxDYxJ,aCoFXyN,G,2MAhFXpO,MAAQ,CAEJqJ,YAAa,KACbiE,SAAU,M,EA8BdvB,cAAgB,SAACD,GACb,EAAKrL,SAAS,CACV4I,YAAayC,K,EAMrBuC,oBAAsB,WAEFjP,eAAeC,QAAQ,WAAvC,IACMiO,EAAW,EAAKtN,MAAMsN,SAI5BvL,EAASsC,WAAWC,IAApB,gBAAiCgJ,EAAS1K,KAAMiL,OAAO,CACnDxE,YAAa,EAAKrJ,MAAMqJ,cACzB3E,MAAK,WAEJ,EAAKhF,MAAM2B,QAAQC,KAAK,kB,EAMhCuF,UAAY,WAIR,OAFoB,EAAK7G,MAAMqJ,YAEV,yBAAKtK,UAAU,2BAA2B2B,QAAS,kBAAM,EAAK2N,wBAA9D,sBAAgH,M,oFAvDnH,IAAD,OAEX3I,EAAUtG,eAAeC,QAAQ,WAIvC0C,EAASsC,WAAWC,IAAI,SAASG,KAAK,SAASC,MAAK,SAAAlC,GAEhD,IAEM4G,EAFQ7G,EAAeC,GAEVoL,MAAK,SAAAxE,GAEpB,OAAOA,EAAK1D,UAAYA,KAGvBiB,IAAEC,QAAQwC,IAEX,EAAK3I,SAAS,CAEV6M,SAAUlE,S,+BAsChB,IAAD,OAGL,OADAjF,QAAQC,IAAI5D,KAAKR,OACV,6BAEH,kBAAC,EAAD,MAEA,yBAAKjB,UAAU,0BACX,kBAAC,GAAD,CAAUgN,cAAe,SAACN,GAAD,OAAc,EAAKM,cAAcN,MACzDjL,KAAKqG,kB,GA5EMlG,aC6Gb2N,G,2MAzGXtO,MAAQ,CAEJ+G,SAAU,M,EAuBd/F,aAAe,SAACxB,GAEZ,IAAMuH,EAAW,EAAK/G,MAAM+G,SAE5BA,EAASvH,EAAQoD,IAAMpD,EAAQyB,MAAMC,OAAOH,MAE5C,EAAKN,SAAS,CACVsG,c,EAIR5F,aAAe,SAACF,GAEZA,EAAMG,iBACN,IAAMkH,EAAS,EAAK5I,MAAMsJ,MAAMC,OAAOrG,GACjCmE,EAAW,EAAK/G,MAAM+G,SAE5BhF,EAASsC,WAAWC,IAApB,gBAAiCgE,IAAUuF,OAAO9G,GAAUrC,MAAK,WAE7D,EAAKhF,MAAM2B,QAAQC,KAAK,kB,EAIhCyK,cAAgB,SAACD,GAEb,IAAM/E,EAAW,EAAK/G,MAAM+G,SAC5BA,EAASM,MAAQyE,EACjB,EAAKrL,SAAS,CACVsG,c,EAKRwH,WAAa,WAET,IAAMxH,EAAW,EAAK/G,MAAM+G,SAE5B,OAASJ,IAAEC,QAAQG,GAyBb,KAvBF,yBAAKhI,UAAU,gBACX,0BAAMyC,SAAU,SAACP,GAAD,OAAW,EAAKE,aAAaF,KAEzC,yBAAKlC,UAAU,gBACX,kBAAC,GAAD,CAAUgN,cAAe,SAACD,GAAD,OAAc,EAAKC,cAAcD,OAG9D,yBAAK/M,UAAU,gBACX,uCACA,2BAAON,KAAK,OAAOc,KAAK,QAAQwB,MAAOgG,EAASxH,KAAMmC,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CACzFC,QAAO2B,GAAI,aAGnB,yBAAK7D,UAAU,gBACX,wCACA,2BAAON,KAAK,OAAOc,KAAK,QAAQwB,MAAOgG,EAASQ,MAAO7F,SAAU,SAACT,GAAD,OAAW,EAAKD,aAAa,CAAEC,QAAO2B,GAAI,cAG/G,sD,mFA5EK,IAAD,OAEV0F,EAAS9H,KAAKd,MAAMsJ,MAAMC,OAAOrG,GAGvCb,EAASsC,WAAWC,IAApB,gBAAiCgE,IAAU7D,KAAK,SAASC,MAAK,SAAAlC,GAE1D,IAAMuE,EAAWvE,EAASM,MAErB6D,IAAEC,QAAQG,IAEX,EAAKtG,SAAS,CAEVsG,kB,+BA4EZ,OAFA5C,QAAQC,IAAI5D,KAAKR,OAEV,6BAEH,kBAAC,EAAD,MACA,wBAAIjB,UAAU,0BAAd,eACCyB,KAAK+N,kB,GAtGK5N,aCwDR6N,GAnCA,WAGX,OAAO,kBAAC,EAAD,KAEH,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/M,IACjC,kBAAC,IAAD,CAAO6M,KAAK,SAASC,OAAK,EAACC,UAAWhK,IACtC,kBAAC,IAAD,CAAO8J,KAAK,YAAYC,OAAK,EAACC,UAAWnJ,IACzC,kBAAC,IAAD,CAAOiJ,KAAK,UAAUC,OAAK,EAACC,UAAWrL,IACvC,kBAAC,IAAD,CAAOmL,KAAK,aAAaC,OAAK,EAACC,UAAWC,IAC1C,kBAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,UAAWpI,IACvC,kBAAC,IAAD,CAAOkI,KAAK,UAAUC,OAAK,EAACC,UAAW9E,KACvC,kBAAC,IAAD,CAAO4E,KAAK,UAAUC,OAAK,EAACC,UAAW7E,KACvC,kBAAC,IAAD,CAAO2E,KAAK,eAAeC,OAAK,EAACC,UAAWlI,IAC5C,kBAAC,IAAD,CAAOgI,KAAK,aAAaC,OAAK,EAACC,UAAWpF,IAC1C,kBAAC,IAAD,CAAOkF,KAAK,sBAAsBC,OAAK,EAACC,UAAWP,KACnD,kBAAC,IAAD,CAAOK,KAAK,mBAAmBC,OAAK,EAACC,UAAWlB,KAChD,kBAAC,IAAD,CAAOgB,KAAK,iBAAiBC,OAAK,EAACC,UAAWtB,KAC9C,kBAAC,IAAD,CAAOoB,KAAK,iBAAiBC,OAAK,EAACC,UAAW/E,IAC9C,kBAAC,IAAD,CAAO6E,KAAK,6BAA6BC,OAAK,EAACC,UAAW/D,KAC1D,kBAAC,IAAD,CAAO6D,KAAK,kBAAkBC,OAAK,EAACC,UAAWzG,IAC/C,kBAAC,IAAD,CAAOuG,KAAK,8BAA8BC,OAAK,EAACC,UAAWhC,KAC3D,kBAAC,IAAD,CAAO8B,KAAK,iBAAiBC,OAAK,EAACC,UAAWpE,KAC9C,kBAAC,IAAD,CAAOkE,KAAK,eAAeC,OAAK,EAACC,UAAWE,KAC5C,kBAAC,IAAD,CAAOJ,KAAK,gBAAgBC,OAAK,EAACC,UAAWR,KAC7C,kBAAC,IAAD,CAAOM,KAAK,YAAYC,OAAK,EAACC,UAAWtE,KACzC,kBAAC,IAAD,CAAOoE,KAAK,uBAAuBC,OAAK,EAACC,UAAWG,KACpD,kBAAC,IAAD,CAAOL,KAAK,4BAA4BC,OAAK,EAACC,UAAWL,QC5CrES,IAASC,OAAO,mBARJ,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,SAKU,MAASC,SAASC,cAAc,Y","file":"static/js/main.61e52e20.chunk.js","sourcesContent":["import React from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SideNavItems = () => {\r\n  const items = [\r\n    {\r\n      type: \"nav-item\",\r\n      icon: \"home\",\r\n      text: \"Dashboard\",\r\n      link: \"/user/dashboard\",\r\n      restricted: true\r\n    },\r\n\r\n    {\r\n      type: \"nav-item\",\r\n      icon: \"home\",\r\n      text: \"Register\",\r\n      link: \"/register\"\r\n    },\r\n\r\n    {\r\n      type: \"nav-item\",\r\n      icon: \"user\",\r\n      text: \"Profile\",\r\n      link: \"/user/profile\",\r\n      restricted: true\r\n    },\r\n\r\n    {\r\n      type: \"nav-item\",\r\n      icon: \"car\",\r\n      text: \"Orders\",\r\n      link: \"/user/orders\",\r\n      restricted: true\r\n    },\r\n\r\n    {\r\n      type: \"nav-item\",\r\n      icon: \"car\",\r\n      text: \"Customers\",\r\n      link: \"/user/customers\",\r\n      restricted: true,\r\n      role: \"admin\"\r\n    },\r\n    {\r\n      type: \"nav-item\",\r\n      icon: \"car\",\r\n      text: \"Riders\",\r\n      link: \"/user/riders\",\r\n      restricted: true,\r\n      role: \"admin\"\r\n    },\r\n\r\n    {\r\n      type: \"nav-item\",\r\n      icon: \"home\",\r\n      text: \"Logout\",\r\n      link: \"/logout\",\r\n      restricted: true\r\n    }\r\n  ];\r\n\r\n  const element = (item, i) => {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n\r\n    if (item.restricted) {\r\n      //check if user is logged in\r\n\r\n      if (sessionStorage.getItem(\"userId\")) {\r\n        if (item.role) {\r\n          const role = sessionStorage.getItem(\"role\");\r\n\r\n          return role === item.role ? (\r\n            <li className={item.type}>\r\n              {\" \"}\r\n              <Link to={item.link}>\r\n                <FontAwesome name={item.icon} /> {item.text}{\" \"}\r\n              </Link>{\" \"}\r\n            </li>\r\n          ) : null;\r\n          //check if userid matches role\r\n        } else {\r\n          //chec k if user is logged in\r\n\r\n          return !userId ? (\r\n            <li className={item.type}>\r\n              {\" \"}\r\n              <Link to={item.link}>\r\n                <FontAwesome name={item.icon} /> {item.text}{\" \"}\r\n              </Link>{\" \"}\r\n            </li>\r\n          ) : null;\r\n        }\r\n      }\r\n    } else {\r\n      return (\r\n        <li className={item.type}>\r\n          {\" \"}\r\n          <Link to={item.link}>\r\n            <FontAwesome name={item.icon} /> {item.text}{\" \"}\r\n          </Link>{\" \"}\r\n        </li>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderLinks = () => {\r\n    return items.map((item, i) => {\r\n      return element(item, i);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav-items\">{renderLinks()}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNavItems;\r\n","import React from \"react\";\r\nimport Sidenav from \"react-simple-sidenav\";\r\nimport SideNavItems from \"./sideNavItems\";\r\nimport \"./sidenav.sass\";\r\n\r\nconst Nav = props => {\r\n  return (\r\n    <Sidenav\r\n      showNav={props.showNav}\r\n      navStyle={{\r\n        background: \"#2980b9\"\r\n      }}\r\n      onHideNav={props.onHideNav}\r\n    >\r\n      <SideNavItems />\r\n    </Sidenav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Sidenav from \"./sidenav/sidenav\";\r\nimport \"./header.sass\";\r\n\r\nimport Fontawesome from \"react-fontawesome\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    showNav: false\r\n  };\r\n\r\n  renderCartSummary = () => {\r\n    const cart = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n    const role = \"customer\";\r\n\r\n    if (cart && role === \"customer\") {\r\n      return <Link to=\"/user/viewCart\"> Cart ({`${cart.length}`}) </Link>;\r\n    }\r\n  };\r\n\r\n  renderUserLinks = () => {\r\n    const role = sessionStorage.getItem(\"role\");\r\n\r\n    switch (role) {\r\n      case \"rest\":\r\n        return (\r\n          <ul className=\"links-wrapper\">\r\n            <li>\r\n              {\" \"}\r\n              <Link to=\"/restaurants\"> Orders </Link>\r\n            </li>\r\n          </ul>\r\n        );\r\n        break;\r\n\r\n      case \"customer\":\r\n        return (\r\n          <ul className=\"links-wrapper\">\r\n            <li>\r\n              {\" \"}\r\n              <Link to=\"/user/viewCart\"> Cart </Link>\r\n            </li>\r\n          </ul>\r\n        );\r\n        break;\r\n\r\n      case \"admin\":\r\n        return (\r\n          <ul className=\"links-wrapper\">\r\n            <li>\r\n              {\" \"}\r\n              <Link to=\"/customers\"> Customers </Link>\r\n            </li>\r\n          </ul>\r\n        );\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  renderLinks = () => {\r\n    //check if user is logged in\r\n    const userId = sessionStorage.getItem(\"loginId\");\r\n\r\n    if (userId) {\r\n      return (\r\n        <nav>\r\n          <Link to=\"/\"> Home</Link>\r\n          <Link to=\"/dashboard\"> Dashboard</Link>\r\n          <Link to=\"/restaurants\"> Restaurants</Link>\r\n          {this.renderUserLinks()}\r\n          {/* {this.renderCartSummary()} */}\r\n          <Link to=\"/logout\"> Logout</Link>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav>\r\n          <Link to=\"/\"> Home</Link>\r\n          <Link to=\"/restaurants\"> Restaurants</Link>\r\n          <Link to=\"/login\"> Login</Link>\r\n          <Link to=\"/register\"> Register</Link>\r\n        </nav>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"main-header\">\r\n          <Sidenav\r\n            showNav={this.state.showNav}\r\n            onHideNav={() => this.setState({ showNav: false })}\r\n          />\r\n\r\n          <div className=\"container\">\r\n            <Link to=\"/\">\r\n              <h1 className=\"logo\">DziDzi</h1>{\" \"}\r\n            </Link>\r\n\r\n            <Fontawesome\r\n              name=\"bars\"\r\n              className=\"menu\"\r\n              onClick={() => this.setState({ showNav: true })}\r\n            />\r\n\r\n            <nav>{this.renderLinks()}</nav>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Header from \"../Header/header\";\r\n\r\n//styling\r\nimport \"./landing.sass\";\r\n\r\nclass Landing extends Component {\r\n  state = {\r\n    search: {\r\n      required: true,\r\n      value: \"\"\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    const search = this.state.search;\r\n\r\n    search.value = event.target.value;\r\n\r\n    this.setState({\r\n      search\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const search = this.state.search.value;\r\n\r\n    if (search !== \"\") {\r\n      this.props.history.push(`/search?q=${search}`);\r\n    } else {\r\n      this.setState({\r\n        error: \"Search Cannot be empty\"\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <Header />\r\n\r\n        <div className=\"form-wrapper\">\r\n          <form onSubmit={event => this.handleSubmit(event)}>\r\n            <h1 className=\"form-title\"> Are you Hungry?</h1>\r\n            <input\r\n              type=\"text\"\r\n              name=\"search\"\r\n              placeholder=\"Enter your location\"\r\n              onChange={this.handleChange}\r\n              value={this.state.search.value}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import React from \"react\";\r\nimport Landing from \"../Landing/landing\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Landing />{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport \"../../css/base.sass\";\r\n\r\nconst Layout = props => {\r\n  return <div> {props.children} </div>;\r\n};\r\n\r\nexport default Layout;\r\n","import * as firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAn1Jvu9qrlqayrHLoCYr2OvpblCkFAKYY\",\r\n  authDomain: \"food-delivery-b222d.firebaseapp.com\",\r\n  databaseURL: \"https://food-delivery-b222d.firebaseio.com\",\r\n  projectId: \"food-delivery-b222d\",\r\n  storageBucket: \"food-delivery-b222d.appspot.com\",\r\n  messagingSenderId: \"216510786586\",\r\n  appId: \"1:216510786586:web:b3ea1f217578b3dccfb5a3\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst firebaseLooper = snapshot => {\r\n  let data = [];\r\n  snapshot.forEach(childSnapshot => {\r\n    data.push({ id: childSnapshot.key, ...childSnapshot.val() });\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nexport { firebase, firebaseLooper };\r\n","import moment from \"moment\";\r\nimport randomString from \"randomstring\";\r\n\r\nconst genDate = () => {\r\n  const date = moment(new Date()).format(\"MMMM Do YYYY, h:mm:ss a\");\r\n  return date;\r\n};\r\n\r\nconst defaultImage =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/1/1e/Default-avatar.jpg\";\r\nconst restDefaultImage =\r\n  \"https://doorservers.com/media/images/default_restaurant.png\";\r\nconst foodDefaultImage =\r\n  \"http://myeatable.com/assets/images/default-food-image-large.png\";\r\n\r\nconst genPassword = () => {\r\n  const randString = randomString.generate({\r\n    length: 8,\r\n    charset: \"alphabetic\"\r\n  });\r\n\r\n  return randString;\r\n};\r\n\r\nexport {\r\n  genDate,\r\n  defaultImage,\r\n  restDefaultImage,\r\n  genPassword,\r\n  foodDefaultImage\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport { firebase, firebaseLooper } from \"../../firebase\";\r\nimport { restDefaultImage } from \"../../config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    rests: null,\r\n    search: null,\r\n    error: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let query = params.get(\"q\");\r\n\r\n    console.log(query);\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"restaurants\")\r\n      .orderByChild(\"location\")\r\n      .equalTo(query)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const rests = firebaseLooper(snapshot);\r\n\r\n        this.setState({\r\n          rests\r\n        });\r\n      });\r\n  }\r\n\r\n  renderRestUnits = () => {\r\n    const rests = this.state.rests;\r\n\r\n    return rests\r\n      ? rests.map(rest => {\r\n          return (\r\n            <Link className=\"rest-unit\" to={`restaurant/${rest.id}`}>\r\n              <div\r\n                className=\"avatar\"\r\n                style={{\r\n                  backgroundImage: `url(${restDefaultImage})`\r\n                }}\r\n              >\r\n                {\" \"}\r\n              </div>\r\n              <div className=\"content\">\r\n                <p className=\"name\">Name: {rest.name}</p>\r\n                <p className=\"location\">Location: {rest.location}</p>\r\n                <p className=\"contact\">Contact: {rest.contact}</p>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })\r\n      : null;\r\n  };\r\n\r\n  renderError = () => {\r\n    const error = this.state.error;\r\n\r\n    return error ? <p> {error}</p> : null;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        <div className=\"container\">\r\n          <h1 className=\"main-title\">\r\n            Search for restaurants around: {this.state.search}{\" \"}\r\n          </h1>\r\n\r\n          <div className=\"rest-wrapper\">\r\n            {this.renderRestUnits()}\r\n            {this.renderError()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport { firebase, firebaseLooper } from \"../../firebase\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    errors: [],\r\n    formData: {\r\n      email: {\r\n        value: \"\",\r\n        required: true\r\n      },\r\n\r\n      password: {\r\n        value: \"\",\r\n        required: true\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = element => {\r\n    const formData = this.state.formData;\r\n    const field = formData[element.id];\r\n\r\n    field.value = element.event.target.value;\r\n    formData[element.id] = field;\r\n\r\n    this.setState({\r\n      formData\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const formData = this.state.formData;\r\n\r\n    let dataToSubmit = {};\r\n    let errors = [];\r\n    for (let key in formData) {\r\n      dataToSubmit[key] = formData[key].value;\r\n\r\n      if (formData[key].required && formData[key].value === \"\") {\r\n        errors.push(`${key} is required`);\r\n      }\r\n    }\r\n\r\n    //check if there are any errors\r\n    if (errors.length > 0) {\r\n      //set the errors\r\n      this.setState({\r\n        errors\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n\r\n      firebase\r\n        .database()\r\n        .ref(\"login\")\r\n        .orderByChild(\"email\")\r\n        .equalTo(dataToSubmit.email)\r\n        .once(\"value\")\r\n        .then(snapshot => {\r\n          const loginData = firebaseLooper(snapshot)[0];\r\n\r\n          //check if there is later and compare the password\r\n          if (loginData && loginData.password === dataToSubmit.password) {\r\n            //compare password\r\n            sessionStorage.setItem(\"loginId\", loginData.id);\r\n            sessionStorage.setItem(\"role\", loginData.role);\r\n            this.props.history.push(\"/dashboard\");\r\n          } else {\r\n            let errors = this.state.errors;\r\n\r\n            errors.push(\"Invalid email/password combination\");\r\n            this.setState({\r\n              isLoading: false,\r\n              errors\r\n            });\r\n          }\r\n        });\r\n\r\n      return;\r\n      //fetch user from database\r\n    }\r\n  };\r\n\r\n  renderButton = () => {\r\n    return this.state.isLoading ? (\r\n      <div className=\"loading\"> Loading </div>\r\n    ) : (\r\n      <button className=\"btn btn-main\"> Login</button>\r\n    );\r\n  };\r\n\r\n  renderErrors = () => {\r\n    const errors = this.state.errors;\r\n\r\n    return errors\r\n      ? errors.map((error, key) => {\r\n          return (\r\n            <p key={key} className=\"error\">\r\n              {\" \"}\r\n              {error}\r\n            </p>\r\n          );\r\n        })\r\n      : null;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n\r\n        <div className=\"container\">\r\n          <div className=\"form-wrapper form-center\">\r\n            <h1 className=\"main-title text-center\"> Login</h1>\r\n\r\n            <form onSubmit={event => this.handleSubmit(event)}>\r\n              <div className=\"form-element\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  onChange={event =>\r\n                    this.handleChange({ event, id: \"email\", blur: false })\r\n                  }\r\n                  value={this.state.formData.email.value}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-element\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Password\"\r\n                  onChange={event =>\r\n                    this.handleChange({ event, id: \"password\", blur: false })\r\n                  }\r\n                  value={this.state.formData.password.value}\r\n                />\r\n              </div>\r\n\r\n              {this.renderErrors()}\r\n              {this.renderButton()}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { firebase, firebaseLooper } from \"../../firebase\";\r\n\r\nimport Header from \"../Header/header\";\r\n\r\nimport { genDate } from \"../../config\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    errors: [],\r\n    formData: {\r\n      name: {\r\n        value: \"\",\r\n        required: true\r\n      },\r\n\r\n      email: {\r\n        value: \"\",\r\n        required: true\r\n      },\r\n\r\n      password: {\r\n        value: \"\",\r\n        required: true\r\n      },\r\n\r\n      contact: {\r\n        value: \"\",\r\n        required: true\r\n      },\r\n\r\n      location: {\r\n        value: \"\",\r\n        required: false\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    //check session storage form session items;\r\n  }\r\n\r\n  handleChange = element => {\r\n    const formData = this.state.formData;\r\n    const field = formData[element.id];\r\n\r\n    field.value = element.event.target.value;\r\n    formData[element.id] = field;\r\n\r\n    this.setState({\r\n      formData\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const formData = this.state.formData;\r\n\r\n    let dataToSubmit = {};\r\n\r\n    let errors = [];\r\n    //\r\n    for (let key in formData) {\r\n      dataToSubmit[key] = formData[key].value;\r\n\r\n      if (formData[key].value === \"\") {\r\n        errors.push(`${key} is required`);\r\n      }\r\n    }\r\n\r\n    if (errors.length > 0) {\r\n      this.setState({\r\n        errors\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errors: [``]\r\n      });\r\n\r\n      console.log(\"process registration\");\r\n\r\n      dataToSubmit[\"role\"] = \"customer\";\r\n      dataToSubmit[\"createdOn\"] = genDate();\r\n\r\n      // console.log(dataToSubmit);\r\n\r\n      //submit data to database\r\n\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n\r\n      console.log(dataToSubmit);\r\n\r\n      //insert data to login table\r\n      // email, password, role\r\n      const loginData = {\r\n        email: dataToSubmit.email,\r\n        password: dataToSubmit.password,\r\n        role: dataToSubmit.role,\r\n        createdOn: dataToSubmit.createdOn\r\n      };\r\n\r\n      //insert data to login table\r\n      //get login id and store to useres table\r\n      //loginId, name, email, password, role, createdon\r\n      console.log(loginData);\r\n\r\n      firebase\r\n        .database()\r\n        .ref(\"login\")\r\n        .push(loginData)\r\n        .then(() => {\r\n          const email = dataToSubmit.email;\r\n\r\n          //fetch user from database and get the login id;\r\n\r\n          firebase\r\n            .database()\r\n            .ref(\"login\")\r\n            .orderByChild(\"email\")\r\n            .equalTo(email)\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n              const user = firebaseLooper(snapshot)[0];\r\n              const loginId = user.id;\r\n              dataToSubmit[\"loginId\"] = loginId;\r\n\r\n              //add user to users collection and redirect to login page\r\n              firebase\r\n                .database()\r\n                .ref(\"users\")\r\n                .push(dataToSubmit)\r\n                .then(() => {\r\n                  sessionStorage.setItem(\r\n                    \"success\",\r\n                    \"Accont Successfully created\"\r\n                  );\r\n                  this.props.history.push(\"/login\");\r\n                });\r\n            });\r\n\r\n          //fetch last insert id\r\n\r\n          //fetch list of all users in login;\r\n\r\n          // firebase.database().ref('login').orderByChild(\"createdOn\").limitToLast(1).once(\"value\").then(snapshot => {\r\n\r\n          //     const user = firebaseLooper(snapshot)[0];\r\n\r\n          //     const loginId = user.id;\r\n\r\n          //     dataToSubmit['loginId'] = loginId;\r\n\r\n          //     firebase.database().ref('users').push(dataToSubmit).then(() => {\r\n\r\n          //         sessionStorage.setItem(\"success\", \"Accont Successfully created\");\r\n          //         this.props.history.push(\"/login\");\r\n\r\n          //     });\r\n          // })\r\n        });\r\n    }\r\n  };\r\n\r\n  renderErrors = () => {\r\n    const errors = this.state.errors;\r\n\r\n    return errors\r\n      ? errors.map((error, index) => {\r\n          return (\r\n            <p key={index} className=\"error\">\r\n              {\" \"}\r\n              {error}\r\n            </p>\r\n          );\r\n        })\r\n      : null;\r\n  };\r\n\r\n  renderButton = () => {\r\n    return this.state.isLoading ? (\r\n      <div className=\"loading\"> Loading.... </div>\r\n    ) : (\r\n      <button className=\"btn btn-main\" type=\"submit\">\r\n        {\" \"}\r\n        Create Account\r\n      </button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register\">\r\n        <Header />\r\n\r\n        <div className=\"container\">\r\n          <h1 className=\"main-title text-center\"> Create An Account</h1>\r\n\r\n          <div className=\"form-wrapper form-center\">\r\n            <form onSubmit={event => this.handleSubmit(event)}>\r\n              <div className=\"form-element\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  onChange={event =>\r\n                    this.handleChange({ event, id: \"name\", blur: false })\r\n                  }\r\n                  value={this.state.formData.name.value}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-element\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Email\"\r\n                  onChange={event =>\r\n                    this.handleChange({ event, id: \"email\", blur: false })\r\n                  }\r\n                  value={this.state.formData.email.value}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-element\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Password\"\r\n                  onChange={event =>\r\n                    this.handleChange({ event, id: \"password\", blur: false })\r\n                  }\r\n                  value={this.state.formData.password.value}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-element\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Contact\"\r\n                  onChange={event =>\r\n                    this.handleChange({ event, id: \"contact\", blur: false })\r\n                  }\r\n                  value={this.state.formData.contact.value}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-element\">\r\n                <select\r\n                  onChange={event =>\r\n                    this.handleChange({ event, id: \"location\", blur: false })\r\n                  }\r\n                >\r\n                  <option>Select Location</option>\r\n                  <option value=\"dansoman\">Dansoman</option>\r\n                  <option value=\"ridge\">Ridge</option>\r\n                  <option value=\"cantonment\">Cantonment</option>\r\n                </select>\r\n              </div>\r\n\r\n              {this.renderErrors()}\r\n\r\n              {this.renderButton()}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { firebase, firebaseLooper } from \"../../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass RestDash extends Component {\r\n  state = {\r\n    role: null,\r\n    restId: null,\r\n    restData: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const role = sessionStorage.getItem(\"role\");\r\n\r\n    if (role === \"rest\" || role === \"admin\") {\r\n      this.setState({\r\n        role\r\n      });\r\n\r\n      //get restId\r\n      const loginId = sessionStorage.getItem(\"loginId\");\r\n\r\n      //fetch login details\r\n\r\n      firebase\r\n        .database()\r\n        .ref(`login/${loginId}`)\r\n        .once(\"value\")\r\n        .then(snapshot => {\r\n          const email = snapshot.val().email;\r\n\r\n          firebase\r\n            .database()\r\n            .ref(\"restaurants\")\r\n            .orderByChild(\"email\")\r\n            .equalTo(email)\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n              const restData = firebaseLooper(snapshot)[0];\r\n              const restId = restData.id;\r\n\r\n              if (restId) {\r\n                this.setState({\r\n                  restId,\r\n                  restData\r\n                });\r\n              }\r\n            });\r\n        });\r\n    } else {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  renderDash = () => {\r\n    const restData = this.state.restData;\r\n\r\n    return restData ? (\r\n      <div className=\"dash-wrapper\">\r\n        <Link\r\n          to={`/restaurant/addMenuItem/${this.state.restId}`}\r\n          className=\"dash-unit\"\r\n        >\r\n          <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n          <p> Add Menu </p>\r\n        </Link>\r\n\r\n        <Link to={`/restaurant/${this.state.restId}`} className=\"dash-unit\">\r\n          <i class=\"fas fa-menorah\"></i>\r\n          <p> Menu </p>\r\n        </Link>\r\n\r\n        <Link to={`/rest/orders/${this.state.restId}`} className=\"dash-unit \">\r\n          <i class=\"fas fa-concierge-bell\"></i>\r\n          <p>Orders</p>\r\n        </Link>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  renderName = () => {\r\n    const restData = this.state.restData;\r\n\r\n    return restData ? (\r\n      <h1 className=\"main-title text-center\"> Welcome {restData.name}</h1>\r\n    ) : null;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <div>\r\n        {this.renderName()}\r\n\r\n        {this.renderDash()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestDash;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1 className=\"main-title text-center\">\r\n        {\" \"}\r\n        Welcome <span>Admin</span>{\" \"}\r\n      </h1>\r\n      <div className=\"dash-wrapper\">\r\n        <Link to=\"/customers\" className=\"dash-unit \">\r\n          <i class=\"fas fa-users\"></i>\r\n          <p> Customers </p>\r\n        </Link>\r\n\r\n        <Link to=\"/restaurants\" className=\"dash-unit \">\r\n          <i class=\"fas fa-utensils\"></i>\r\n          <p>Restaurant</p>\r\n        </Link>\r\n\r\n        {/* <Link to=\"/riders\" className=\"dash-unit \">\r\n                <i class=\"fas fa-motorcycle\"></i>\r\n                <p>Riders</p>\r\n            </Link> */}\r\n\r\n        <Link to=\"/admin/orders\" className=\"dash-unit \">\r\n          <i class=\"fas fa-concierge-bell\"></i>\r\n          <p>Orders</p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firebase, firebaseLooper } from \"../../firebase\";\r\n\r\nclass CustDash extends Component {\r\n  state = {\r\n    custData: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    //get user details\r\n\r\n    const loginId = sessionStorage.getItem(\"loginId\");\r\n    const role = sessionStorage.getItem(\"role\");\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"users\")\r\n      .orderByChild(\"loginId\")\r\n      .equalTo(loginId)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const custData = firebaseLooper(snapshot)[0];\r\n\r\n        if (custData) {\r\n          this.setState({\r\n            custData\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  renderDash = () => {\r\n    const custData = this.state.custData;\r\n\r\n    return custData ? (\r\n      <div className=\"dashboard\">\r\n        <h1 className=\"main-title text-center\">\r\n          {\" \"}\r\n          Welcome <span>{custData.name}</span>{\" \"}\r\n        </h1>\r\n        <div className=\"dash-wrapper\">\r\n          <Link to={`/user/${custData.id}`} className=\"dash-unit \">\r\n            <i class=\"fas fa-user\"></i>\r\n            <p> Profile </p>\r\n          </Link>\r\n\r\n          <Link to=\"/user/orders\" className=\"dash-unit \">\r\n            <i class=\"fas fa-concierge-bell\"></i>\r\n            <p>Orders</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  render() {\r\n    return <div> {this.renderDash()} </div>;\r\n  }\r\n}\r\n\r\nexport default CustDash;\r\n","import React, { Component } from \"react\";\r\nimport RestDash from \"./restDashboard\";\r\nimport AdminDash from \"./adminDashboard\";\r\nimport CustDash from \"./custsDashBoard\";\r\nimport Header from \"../Header/header\";\r\nimport \"./dashboard.sass\";\r\n\r\nclass DashBoard extends Component {\r\n  state = {\r\n    role: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const role = sessionStorage.getItem(\"role\");\r\n    this.setState({\r\n      role\r\n    });\r\n  }\r\n\r\n  renderDash = () => {\r\n    const role = this.state.role;\r\n\r\n    if (role) {\r\n      switch (role) {\r\n        case \"customer\":\r\n          return <CustDash />;\r\n          break;\r\n        case \"admin\":\r\n          return <AdminDash {...this.props} />;\r\n          break;\r\n        case \"rest\":\r\n          return <RestDash {...this.props} />;\r\n          break;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>{this.renderDash()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n","import React from \"react\";\r\n\r\nconst Logout = props => {\r\n  const logoutUser = () => {\r\n    sessionStorage.clear();\r\n\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return <div> {logoutUser()}</div>;\r\n};\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport Header from '../../Header/header';\r\nimport { Link } from 'react-router-dom';\r\nimport { firebase, firebaseLooper } from '../../../firebase';\r\nimport { defaultImage } from \"../../../config\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"./rests.sass\";\r\n\r\n\r\n\r\nclass Restaurants extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        rests: null\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        //get list of all restaurants\r\n\r\n        firebase.database().ref('restaurants').once(\"value\").then(snapshot => {\r\n\r\n            const rests = firebaseLooper(snapshot);\r\n\r\n            if (rests) {\r\n\r\n                this.setState({\r\n\r\n                    rests\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    renderRests = () => {\r\n\r\n        const rests = this.state.rests;\r\n\r\n        if (!_.isEmpty(rests)) {\r\n\r\n\r\n            return rests.map(rest => {\r\n\r\n                return <Link to={`/restaurant/${rest.id}`} className=\"rest-unit\">\r\n\r\n                    <div className=\"avatar\"\r\n\r\n                        style={{\r\n                            backgroundImage: `url(${defaultImage})`\r\n                        }}\r\n\r\n                    ></div>\r\n                    <div className=\"content\">\r\n\r\n                        <p> Name: {rest.name}</p>\r\n                        <p> Location: {rest.location}</p>\r\n                        <p> Contact: {rest.contact}</p>\r\n\r\n                    </div>\r\n                </Link>\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    renderCta = () => {\r\n\r\n        const role = sessionStorage.getItem(\"role\");\r\n\r\n        if (role === \"admin\") {\r\n\r\n            return <Link to=\"restaurant/add-restaurant\" className=\"cta\">Add Restaurant</Link>\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n\r\n        // console.log(this.state);\r\n        return <div>\r\n\r\n            <Header />\r\n            <div className=\"container\">\r\n\r\n                <div className=\"header-wrapper\">\r\n\r\n                    <h1 className=\"main-title\">List of Restaurants</h1>\r\n\r\n                    {this.renderCta()}\r\n                </div>\r\n\r\n                <div className=\"rest-wrapper\">\r\n\r\n                    {this.renderRests()}\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Restaurants;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./restMenuTemplate.sass\";\r\n\r\nconst RestMenuTemplate = ({ menuData, addToCart, handleDelete }) => {\r\n\r\n    const role = sessionStorage.getItem(\"role\");\r\n\r\n    //  --- TODO ---\r\n    //if role is customer display cta\r\n\r\n\r\n    const renderCta = (menuItem) => {\r\n\r\n        const role = sessionStorage.getItem(\"role\");\r\n\r\n        console.log(menuItem);\r\n\r\n        switch (role) {\r\n\r\n            case \"customer\":\r\n                return <div className=\"btn-wrapper\">\r\n                    <button className=\"btn btn-main\" onClick={() => addToCart(menuItem)}> Add To Cart  </button>\r\n                </div>\r\n\r\n            case \"admin\":\r\n\r\n                return <div className=\"btn-wrapper\">\r\n\r\n                    <Link to={`/restaurant/menu/edit/${menuItem.id}`} className=\"btn btn-main text-center\"> Edit </Link>\r\n                    <button className=\"btn btn-danger\">Delete</button>\r\n\r\n                </div>\r\n                break;\r\n            case \"rest\":\r\n\r\n                return <div className=\"btn-wrapper\">\r\n\r\n                    <Link to={`/restaurant/menu/edit/${menuItem.id}`} className=\"btn btn-main text-center\"> Edit </Link>\r\n                    <button className=\"btn btn-danger\" onClick={() => handleDelete(menuItem)}>Delete</button>\r\n\r\n                </div>\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    const renderMenuItems = (category, menuData) => {\r\n\r\n        return menuData.map(menuItem => {\r\n\r\n            return menuItem.category === category ? <div className=\"menu-item\">\r\n\r\n                <div className=\"avatar\" style={{\r\n                    backgroundImage: `url(${menuItem.cover.fileUrl})`\r\n\r\n                }}></div>\r\n\r\n                <div className=\"desc\">\r\n                    <p className=\"item-name\"> {menuItem.name} </p>\r\n                    <p className=\"item-price\">Price: GHC{menuItem.price} </p>\r\n                    {renderCta(menuItem)}\r\n                </div>\r\n\r\n\r\n            </div> : null;\r\n        })\r\n\r\n    }\r\n\r\n    const renderMenu = () => {\r\n\r\n        const categories = getCategories(menuData);\r\n\r\n        let template = null;\r\n\r\n        template = categories.map(category => {\r\n\r\n            return <div>\r\n                <div className='menu-unit'>\r\n                    <h2 className=\"cat-name\">  {category}</h2>\r\n                    <div className=\"menu-content\">\r\n                        <div className=\"content\">\r\n                            {renderMenuItems(category, menuData)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        })\r\n\r\n        return template;\r\n    }\r\n\r\n    const getCategories = () => {\r\n\r\n        const category = menuData.map(data => {\r\n\r\n            return data.category;\r\n        })\r\n\r\n        const data = [... new Set(category)];\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n    return <div className=\"menu-wrapper\">\r\n\r\n        <h1 className=\"main-title\"> Menu</h1>\r\n        {renderMenu()}\r\n\r\n    </div>\r\n}\r\n\r\nexport default RestMenuTemplate;","import React from \"react\";\r\nimport \"./cartTemplate.sass\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { parse } from \"url\";\r\nimport _ from \"lodash\";\r\n\r\nconst CartTemplate = ({ cartData, link, text, clearCart, removeItem, placeOrder }) => {\r\n\r\n\r\n    const renderCart = () => {\r\n\r\n        return cartData.map(item => {\r\n\r\n            return <div className=\"cart-item\">\r\n                <h2 className=\"item-name\"> {item.name} </h2>\r\n                <p className=\"item-price\"> GHC {item.price} </p>\r\n                <i class=\"fas fa-window-close close\" onClick={() => removeItem(item)}></i>\r\n            </div>\r\n        })\r\n    }\r\n\r\n    const renderTotal = () => {\r\n\r\n        if (!_.isEmpty(cartData)) {\r\n\r\n            let total = 0;\r\n\r\n            cartData.forEach(item => {\r\n\r\n                total += parseInt(item.price)\r\n            });\r\n\r\n\r\n\r\n            return <div>\r\n\r\n                <p className='total'> Total: {total}</p>\r\n            </div>\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const renderCta = () => {\r\n\r\n        return <div className=\"button-wrapper\">\r\n            {/* <Link to={link} className=\"cta\"> {text}</Link> */}\r\n            <div className=\"cta clear\" onClick={() => clearCart()}> Clear Cart</div>\r\n        </div>\r\n\r\n    }\r\n    return <div>\r\n\r\n        {renderCart()}\r\n        {renderTotal()}\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartTemplate;","import React, { Component } from \"react\";\r\nimport Header from \"../../Header/header\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\nimport { restDefaultImage } from \"../../../config\";\r\nimport RestMenuTemplate from \"../../widgets/user/restaurant/restMenuTemplate\";\r\nimport _ from \"lodash\";\r\nimport CartTemplate from \"../../widgets/cart/cartTemplate\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Restaurant extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        restData: null,\r\n        restMenu: null,\r\n        cart: [],\r\n        errors: \"\",\r\n        showError: false\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        const id = this.props.match.params.id\r\n\r\n        const cart = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n\r\n        if (!_.isEmpty(cart)) {\r\n\r\n            this.setState({\r\n                cart\r\n            })\r\n        }\r\n\r\n\r\n        //fetch restaurant\r\n        firebase.database().ref(`restaurants/${id}`).once(\"value\").then(snapshot => {\r\n\r\n            const restData = { id: snapshot.key, ...snapshot.val() };\r\n\r\n            if (restData) {\r\n\r\n                const restId = restData.id;\r\n                //get list of menu\r\n                firebase.database().ref(`menus`).orderByChild('restId').equalTo(restId).once(\"value\").then(snapshot => {\r\n\r\n                    const restMenu = firebaseLooper(snapshot);\r\n                    restMenu.restName = restData.name\r\n                    this.setState({\r\n                        restData,\r\n                        restMenu\r\n                    })\r\n                })\r\n\r\n\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    renderProfile = () => {\r\n\r\n\r\n        const rest = this.state.rest;\r\n\r\n        return rest ?\r\n            <div className=\"rest-profile-wrapper\">\r\n\r\n                <div className=\"avatar\"\r\n\r\n                    style={{\r\n                        backgroundImage: `url(${restDefaultImage})`\r\n                    }}\r\n                ></div>\r\n                <h1 className=\"rest-name\">{rest.name}</h1>\r\n                <p className=\"location\">Location: {rest.location}</p>\r\n            </div> : null;\r\n    }\r\n\r\n\r\n    handleDelete = (item) => {\r\n\r\n        const menuId = item.id;\r\n\r\n        const restMenu = this.state.restMenu;\r\n\r\n        let position = null;\r\n        restMenu.forEach((menuItem, index) => {\r\n\r\n            if (menuItem.id === menuId) {\r\n\r\n                position = index\r\n            }\r\n        })\r\n\r\n        restMenu.splice(position, 1);\r\n\r\n        firebase.database().ref(`menus/${menuId}`).remove().then(() => {\r\n\r\n            console.log(\"item removed\")\r\n            this.setState({\r\n                restMenu\r\n            })\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    renderMenu = () => {\r\n\r\n\r\n        const menuData = this.state.restMenu;\r\n\r\n\r\n        if (!_.isEmpty(menuData)) {\r\n\r\n            return <RestMenuTemplate\r\n                menuData={menuData}\r\n                addToCart={(item) => this.addToCart(item)}\r\n                handleDelete={(item) => this.handleDelete(item)}\r\n\r\n            />\r\n        }\r\n\r\n    }\r\n\r\n\r\n    addToCart = (item) => {\r\n\r\n        //set item status to pending\r\n        item.status = \"pending\";\r\n        item.restName = this.state.restData.name;\r\n        let cart = this.state.cart;\r\n        let errors = [];\r\n\r\n\r\n        //check if cart is empty\r\n        if (!_.isEmpty(cart)) {\r\n\r\n            //check if user is ordering from the same restaurant\r\n\r\n            cart.forEach(cartItem => {\r\n\r\n                if (cartItem.restId !== item.restId) {\r\n\r\n                    errors.push(\"cannot add item from different restaurant\");\r\n                }\r\n\r\n            })\r\n\r\n\r\n\r\n            //check if item has already in cart\r\n            cart.forEach((cartItem => {\r\n\r\n                if (cartItem.id === item.id) {\r\n\r\n                    errors.push('Item already added to cart');\r\n                }\r\n\r\n            }));\r\n\r\n\r\n\r\n            //check if error array is empty\r\n            if (errors.length > 0) {\r\n\r\n                this.setState({\r\n                    errors,\r\n                    showError: true\r\n                })\r\n            } else {\r\n\r\n                //add item to cart\r\n\r\n                cart.push(item);\r\n                const cartData = JSON.stringify(cart);\r\n                sessionStorage.setItem(\"cart\", cartData);\r\n                this.setState({\r\n                    cart\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n\r\n            cart.push(item);\r\n            const cartData = JSON.stringify(cart);\r\n            sessionStorage.setItem(\"cart\", cartData);\r\n            this.setState({\r\n                cart\r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    removeItem = (item) => {\r\n\r\n        const cart = this.state.cart;\r\n        let itemIndex = null;\r\n\r\n\r\n        cart.forEach((cartItem, index) => {\r\n\r\n            if (cartItem.id === item.id) {\r\n\r\n                cart.splice(index, 1);\r\n                sessionStorage.setItem(\"cart\", JSON.stringify(cart));\r\n                this.setState({\r\n                    cart\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    renderCart = () => {\r\n\r\n        const cart = this.state.cart;\r\n\r\n        return (!_.isEmpty(cart)) ? <div className='cart mini-cart'>\r\n\r\n            <CartTemplate cartData={cart} text=\"proceed to cart\" link=\"/user/viewCart\" clearCart={this.clearCart} removeItem={(item) => this.removeItem(item)} />\r\n\r\n            <Link to=\"/user/viewCart\" class=\"btn btn-main text-center\"> Proceed to Checkout </Link>\r\n\r\n        </div> : null;\r\n\r\n    }\r\n\r\n\r\n    clearCart = () => {\r\n\r\n\r\n        sessionStorage.removeItem('cart');\r\n        this.setState({\r\n            cart: []\r\n        })\r\n    }\r\n\r\n    renderError = () => {\r\n\r\n        const errors = this.state.errors;\r\n\r\n        return this.state.showError ? <div className=\"error-container\">\r\n\r\n            <div className=\"inner\">\r\n\r\n                {errors.map(error => {\r\n\r\n                    return <p className=\"error\">  {error}</p>\r\n                })}\r\n\r\n            </div>\r\n            <button className=\"btn btn-main\" onClick={() => this.setState({\r\n                showError: false\r\n            })}>  Close</button>\r\n        </div> : null;\r\n    }\r\n\r\n    render() {\r\n\r\n        // console.log(this.state.cart);\r\n\r\n        return <div className=\"restaurant\">\r\n\r\n            <Header />\r\n            {this.renderProfile()}\r\n            <div>\r\n\r\n                {this.renderMenu()}\r\n                {this.renderCart()}\r\n                {this.renderError()}\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div >\r\n    }\r\n\r\n}\r\n\r\nexport default Restaurant;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { defaultImage } from \"../../../config\";\r\nimport _ from \"lodash\";\r\n\r\n\r\nconst UserList = ({ users }) => {\r\n\r\n\r\n\r\n    const renderAvatar = (user) => {\r\n\r\n        const profileData = user.profileData;\r\n\r\n        return (!_.isEmpty(profileData)) ? <div className=\"face\" style={{\r\n            backgroundImage: `url(${profileData.fileUrl})`\r\n        }}></div> :\r\n            <div className=\"face\" style={{\r\n                backgroundImage: `url(${defaultImage})`\r\n            }}></div>\r\n    }\r\n    return <div className=\"user-unit-wrapper\">\r\n\r\n        {users.map((user) => {\r\n\r\n            return <Link to={`user/${user.id}`} className=\"user-unit\">\r\n\r\n                {renderAvatar(user)}\r\n\r\n                <div className=\"content\">\r\n                    <p className=\"name\">Name: {user.name} </p>\r\n                    <p className=\"email\"> Email: {user.email}</p>\r\n                    <p className=\"contact\"> Contact: {user.contact}</p>\r\n                    <p className=\"contact\"> Role: {user.role}</p>\r\n                </div>\r\n\r\n\r\n            </Link>\r\n        })}\r\n\r\n    </div>\r\n}\r\n\r\nexport default UserList;","import React, { Component } from \"react\";\r\nimport Header from \"../../Header/header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\nimport UserList from \"../../widgets/user/userList\";\r\nimport _ from \"lodash\";\r\n\r\nclass Customers extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        users: []\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        //authenticate user\r\n        // this.auth();\r\n\r\n\r\n        //fetch list of customers\r\n        firebase.database().ref('users').once(\"value\").then(snapshot => {\r\n\r\n            const users = firebaseLooper(snapshot);\r\n\r\n            const customers = users.filter(user => {\r\n\r\n                return user.role === \"customer\";\r\n            })\r\n\r\n            if (users.length > 0) {\r\n\r\n                this.setState({\r\n                    users: customers\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    auth = () => {\r\n\r\n        const userId = sessionStorage.getItem('userId');\r\n        const role = sessionStorage.getItem(\"role\");\r\n\r\n        if (!userId || role !== \"admin\") {\r\n\r\n            this.props.history.push(\"/login\")\r\n        }\r\n\r\n    }\r\n\r\n    renderUsers = () => {\r\n\r\n        const users = this.state.users;\r\n\r\n\r\n        if (!_.isEmpty(users)) {\r\n\r\n            return <UserList users={this.state.users} />\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n\r\n\r\n        console.log(this.state);\r\n\r\n        return <div>\r\n\r\n            <Header />\r\n\r\n            <div className=\"container\">\r\n\r\n\r\n                <div className=\"header-wrapper\">\r\n                    <h1 className=\"main-title\"> List of Customers </h1>\r\n                    <Link to=\"/user/add-user\" className=\"cta\">Add Customer</Link>\r\n                </div>\r\n\r\n                <div>\r\n\r\n                    {this.renderUsers()}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Customers;","import React from \"react\";\r\nimport Header from \"../../Header/header\";\r\n\r\nconst Customer = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div>\r\n        <div className=\"header-wrapper\">\r\n          <h1>Customer Details</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../Header/header\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\nimport UserList from \"../../widgets/user/userList\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Riders extends Component {\r\n\r\n    state = {\r\n\r\n        users: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //fetch list of all riders\r\n\r\n        firebase.database().ref('users').orderByChild(\"role\").equalTo('rider').once(\"value\").then(snapshot => {\r\n\r\n            const users = firebaseLooper(snapshot);\r\n\r\n            if (!_.isEmpty(users)) {\r\n\r\n                this.setState({\r\n\r\n                    users\r\n                })\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    renderUsers = () => {\r\n\r\n        const users = this.state.users;\r\n\r\n        return (!_.isEmpty(users)) ? <UserList users={users} /> : null;\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div>\r\n\r\n            <Header />\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"header-wrapper\"> <h1 className=\"main-title\">List of Riders</h1> <Link className=\"cta\" to=\"/user/add-user\">Add Rider</Link>  </div>\r\n\r\n                {this.renderUsers()}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Riders;","import React, { Component } from \"react\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\nimport Header from \"../../Header/header\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./orders.sass\";\r\n\r\nclass Orders extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        orders: []\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get list of orders\r\n        const loginId = sessionStorage.getItem(\"loginId\");\r\n        console.log(loginId);\r\n        firebase.database().ref('orders').orderByChild('userId').equalTo(loginId).once(\"value\").then(snapshot => {\r\n\r\n            const orders = firebaseLooper(snapshot);\r\n\r\n            console.log(orders);\r\n\r\n            if (!_.isEmpty(orders)) {\r\n\r\n                this.setState({\r\n\r\n                    orders\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    renderOrderDetails = (order) => {\r\n\r\n        return (!_.isEmpty(order)) > 0 ? order.map(item => {\r\n\r\n            return <div className=\"order-unit\">\r\n\r\n                <p>Name: {item.name} </p>\r\n                <p>Price: {item.name} </p>\r\n                <p>Status: {item.status} </p>\r\n            </div>\r\n        }) : null;\r\n    }\r\n    renderOrderItems = (order) => {\r\n\r\n        return (!_.isEmpty(order)) ? this.renderOrderDetails(order.order) : null;\r\n    }\r\n\r\n\r\n    renderOrders = () => {\r\n\r\n        const orders = this.state.orders;\r\n\r\n        return (!_.isEmpty(orders)) ? orders.map((order, index) => {\r\n\r\n            index += 1;\r\n\r\n            return <div>\r\n\r\n                <div className=\"order-wrapper\">\r\n                    <div className='order-item'>\r\n                        <p className=\"order-index\">Order: {index}</p>\r\n                        {this.renderOrderItems(order)}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        }) : null;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        console.log(this.state);\r\n        return <div>\r\n\r\n            <Header />\r\n\r\n            <h1 className=\"main-title text-center\"> Your Order </h1>\r\n            {this.renderOrders()}\r\n\r\n\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Orders;","import React from \"react\";\r\nimport { defaultImage } from \"../../../config\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst userProfile = ({ user }) => {\r\n\r\n\r\n    console.log(user);\r\n    const renderCta = () => {\r\n\r\n        const loginId = sessionStorage.getItem(\"loginId\");\r\n\r\n        return (loginId === user.loginId) ? <Link to=\"/user/changeProfile\" className=\"btn btn-success\">Change Profile </Link> : null;\r\n\r\n\r\n    }\r\n\r\n\r\n    const renderAvatar = () => {\r\n\r\n        const profileData = user.profileData;\r\n\r\n        return (!_.isEmpty(profileData)) ?\r\n            <div className=\"face\" style={{\r\n                backgroundImage: `url(${profileData.fileUrl})`\r\n            }}> </div> : <div className=\"face\" style={{\r\n                backgroundImage: `url(${defaultImage})`\r\n            }}> </div>\r\n    }\r\n    return <div className=\"profile-wrapper\">\r\n        {renderAvatar()}\r\n        <div className=\"content\">\r\n            <p className=\"name\">Name: {user.name}</p>\r\n            <p className=\"email\">Email: {user.email}</p>\r\n            <p className=\"contact\">Contact: {user.contact}</p>\r\n            <p className=\"location\"> Address: {user.location} </p>\r\n            <p className=\"role\"> Role: {user.role} </p>\r\n\r\n            {renderCta()}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default userProfile;","import React, { Component } from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport { firebase } from '../../firebase';\r\nimport Userprofile from \"../widgets/user/userProfile\";\r\nimport _ from \"lodash\";\r\nimport \"./user.sass\";\r\n\r\nclass User extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        user: null\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        const userId = this.props.match.params.id;\r\n\r\n        //get user\r\n        firebase.database().ref(`users/${userId}`).once('value').then(snapshot => {\r\n\r\n            const user = { id: snapshot.key, ...snapshot.val() };\r\n\r\n\r\n            if (user) {\r\n\r\n                this.setState({\r\n                    user\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    renderUser = () => {\r\n\r\n\r\n        const user = this.state.user;\r\n\r\n        if (!_.isEmpty(user)) {\r\n\r\n            return <Userprofile user={user} />\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return <div className=\"profile\">\r\n\r\n            <Header />\r\n            <div className=\"container\">\r\n\r\n                <h1 className=\"main-title text-center\"> Profile </h1>\r\n                {this.renderUser()}\r\n\r\n            </div>\r\n\r\n\r\n            <div>\r\n\r\n                {/* get role of user and render details */}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default User;","import React, { Component } from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport { firebase, firebaseLooper } from \"../../firebase\";\r\nimport { genDate } from \"../../config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AddUser extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        errors: null,\r\n\r\n        formData: {\r\n\r\n            name: {\r\n\r\n                value: \"\",\r\n                required: true\r\n            },\r\n\r\n            email: {\r\n                value: '',\r\n                required: true\r\n            },\r\n\r\n            contact: {\r\n                value: \"\",\r\n                required: true\r\n            },\r\n\r\n            location: {\r\n\r\n                value: '',\r\n                required: true\r\n            },\r\n\r\n            role: {\r\n\r\n                value: \"\",\r\n                required: true\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (element) => {\r\n\r\n        const newFormData = {\r\n\r\n            ...this.state.formData\r\n        }\r\n\r\n        newFormData[element.id].value = element.event.target.value;\r\n\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        let errors = [];\r\n\r\n        const formData = this.state.formData;\r\n        let dataToSubmit = {};\r\n\r\n\r\n        for (let key in formData) {\r\n\r\n\r\n            //do some validation work\r\n            if (formData[key].required && formData[key].value === \"\") {\r\n\r\n                errors.push(`${key} is required`);\r\n            }\r\n\r\n            dataToSubmit[key] = formData[key].value;\r\n\r\n        }\r\n\r\n        if (errors.length > 0) {\r\n\r\n            console.log(errors);\r\n            this.setState({\r\n\r\n                errors\r\n            })\r\n        } else {\r\n\r\n            console.log(\"process user\");\r\n\r\n            this.setState({\r\n                errors: null\r\n            })\r\n\r\n\r\n            dataToSubmit['createdOn'] = genDate();\r\n\r\n            firebase.database().ref('users').push(dataToSubmit).then(() => {\r\n\r\n                //fetch list of user\r\n\r\n                firebase.database().ref('users').orderByChild(\"createdOn\").limitToLast(1).once(\"value\").then(snapshot => {\r\n\r\n                    const userId = firebaseLooper(snapshot)[0].id;\r\n\r\n                    if (userId) {\r\n\r\n                        console.log(userId);\r\n\r\n                        this.setState({\r\n\r\n                            newUser: userId\r\n                        })\r\n                    }\r\n                })\r\n\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderErrors = () => {\r\n\r\n        const errors = this.state.errors;\r\n\r\n        return errors ? errors.map(error => <p className=\"error\"> {error} </p>) : null;\r\n    }\r\n\r\n\r\n    renderNewUser = () => {\r\n\r\n\r\n        console.log(this.state);\r\n\r\n        const newUser = this.state.newUser;\r\n\r\n        if (newUser) {\r\n\r\n            return <Link to={`/user/${newUser}`} className=\"info\"> Click to view new user </Link>\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className=\"add-user\">\r\n\r\n            <Header />\r\n\r\n            <div className=\"container\">\r\n\r\n                <h1 className=\"main-title text-center\"> Add User </h1>\r\n                <div className=\"form-wrapper\">\r\n\r\n                    <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                        <div className=\"form-element\">\r\n                            <input type='text' placeholder=\"name\"\r\n                                onChange={(event) => this.handleChange({ event, id: \"name\" })}\r\n\r\n                                value={this.state.formData.name.value}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-element\">\r\n                            <input type='text' placeholder=\"email\"\r\n\r\n                                onChange={(event) => this.handleChange({ event, id: \"email\" })}\r\n\r\n                                value={this.state.formData.email.value}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-element\">\r\n                            <input type='text' placeholder=\"Location\"\r\n\r\n                                onChange={(event) => this.handleChange({ event, id: \"location\" })}\r\n\r\n                                value={this.state.formData.location.value}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-element\">\r\n                            <input type='number' placeholder=\"Contact\"\r\n\r\n                                onChange={(event) => this.handleChange({ event, id: \"contact\" })}\r\n\r\n                                value={this.state.formData.contact.value}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-element\">\r\n\r\n                            <select className=\"select\"\r\n\r\n                                onChange={(event) => this.handleChange({ event, id: \"role\" })}\r\n\r\n                                value={this.state.formData.role.value}\r\n                            >\r\n                                <option value=\"\"> Select Role </option>\r\n                                <option value=\"customer\"> Customer </option>\r\n                                <option value=\"rider\"> Rider </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        {this.renderErrors()}\r\n                        {this.renderNewUser()}\r\n\r\n                        <button type=\"submit\" name=\"submit\"> Create Account </button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default AddUser;","import React, { Component } from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport { genPassword, genDate } from \"../../config\";\r\nimport { firebase, firebaseLooper } from '../../firebase';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AddRestaurant extends Component {\r\n\r\n    state = {\r\n\r\n        errors: null,\r\n        newRest: null,\r\n\r\n        formData: {\r\n\r\n            name: {\r\n                value: '',\r\n                required: true\r\n            },\r\n\r\n            email: {\r\n\r\n                value: \"\",\r\n                required: true\r\n            },\r\n\r\n            contact: {\r\n                value: \"\",\r\n                required: true\r\n            },\r\n\r\n            location: {\r\n\r\n                value: \"\",\r\n                required: true\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (element) => {\r\n\r\n        const newFormData = {\r\n\r\n            ...this.state.formData\r\n        }\r\n\r\n        newFormData[element.id].value = element.event.target.value;\r\n\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        let formData = this.state.formData;\r\n        let errors = [];\r\n\r\n        let dataToSubmit = {}\r\n\r\n        for (let key in formData) {\r\n\r\n            dataToSubmit[key] = formData[key].value\r\n\r\n            //do some validation works\r\n            if (formData[key].required && formData[key].value === \"\") {\r\n                errors.push(`${key} is required`);\r\n\r\n            }\r\n        }\r\n\r\n        if (errors.length > 0) {\r\n\r\n            this.setState({\r\n\r\n                errors\r\n            })\r\n        } else {\r\n\r\n            //clear errors\r\n            this.setState({\r\n\r\n                errors: null\r\n            })\r\n\r\n\r\n            dataToSubmit['password'] = \"password\"//genPassword();\r\n            dataToSubmit['createdOn'] = genDate();\r\n\r\n            const loginData = {\r\n\r\n                email: dataToSubmit.email,\r\n                password: dataToSubmit.password,\r\n                role: \"rest\",\r\n                createdOn: genDate()\r\n            }\r\n\r\n            //insert dataToDatabase\r\n\r\n            firebase.database().ref('login').push(loginData).then(() => {\r\n\r\n                firebase.database().ref('login').orderByChild('email').equalTo(dataToSubmit.email).once(\"value\").then(snapshot => {\r\n\r\n                    const loginId = firebaseLooper(snapshot)[0].id;\r\n\r\n                    dataToSubmit['loginId'] = loginId;\r\n\r\n                    firebase.database().ref('restaurants').push(dataToSubmit).then(snapshot => {\r\n\r\n                        sessionStorage.setItem('success', \"account successfully created\");\r\n                        this.props.history.push(\"/dashboard\")\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            })\r\n            return;\r\n\r\n            //add data to database\r\n\r\n            firebase.database().ref('restaurants').push(dataToSubmit).then(() => {\r\n\r\n                //reset the form\r\n                // for (let key in formData) {\r\n                //     formData[key].value = \"\"\r\n                // }\r\n\r\n\r\n                //fetch list of restaurants\r\n\r\n                firebase.database().ref('restaurants').orderByChild('createdOn').limitToLast(1).once(\"value\").then(snapshot => {\r\n\r\n                    const rest = firebaseLooper(snapshot)[0];\r\n\r\n                    const restId = rest.id;\r\n\r\n                    this.setState({\r\n\r\n                        newRest: restId\r\n                    })\r\n\r\n                });\r\n                this.setState({\r\n\r\n                    formData\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    renderErrors = () => {\r\n\r\n        const errors = this.state.errors;\r\n\r\n        return errors ? errors.map(error => <p className=\"error\"> {error} </p>) : null;\r\n    }\r\n\r\n\r\n    renderNewRest = () => {\r\n\r\n        const newRest = this.state.newRest;\r\n\r\n        return newRest ? <Link to={`/restaurant/${newRest}`} className=\"feedback\"> Click Here  to view new Rest </Link> : null;\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div>\r\n\r\n            <Header />\r\n            <div className=\"container\">\r\n                <h1 className=\"main-title text-center\">Add Restaurant</h1>\r\n\r\n                <div className=\"form-wrapper\">\r\n\r\n                    <form onSubmit={(event) => this.handleSubmit(event)}>\r\n\r\n                        <div className=\"form-element\">\r\n                            <input type=\"text\" placeholder=\"Enter Name of restaurant\"\r\n\r\n                                onChange={(event) => this.handleChange({ event, id: \"name\" })}\r\n\r\n\r\n                                value={this.state.formData.name.value}\r\n\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-element\">\r\n                            <input type=\"text\" placeholder=\"Enter Email\"\r\n\r\n                                onChange={(event) => this.handleChange({ event, id: \"email\" })}\r\n\r\n                                value={this.state.formData.email.value}\r\n                            />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-element\">\r\n                            <input type=\"number\" placeholder=\"Enter Contact\"\r\n\r\n                                onChange={(event) => this.handleChange({ event, id: \"contact\" })}\r\n\r\n                                value={this.state.formData.contact.value}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-element\">\r\n\r\n                            <label> Select Location </label>\r\n\r\n                            <select\r\n                                onChange={(event) => this.handleChange({ event, id: \"location\" })}\r\n                            >\r\n                                <option value=\"dansoman\"> -- select option -- </option>\r\n                                <option value=\"dansoman\"> Dansoman </option>\r\n\r\n                                <option value=\"osu\"> Osu </option>\r\n                                <option value=\"cantonment\"> Cantonment </option>\r\n\r\n                                <option value=\"airport\"> Airport </option>\r\n                            </select>\r\n\r\n                        </div>\r\n\r\n                        {/* <div className=\"form-element\">\r\n\r\n                            <label>Free Delivery? </label>\r\n                            <select\r\n                                onChange={(event) => this.handleChange({ event, id: \"delivery\" })}\r\n                            >\r\n                                <option value=\"\">-- select option --</option>\r\n                                <option value=\"yes\">Yes</option>\r\n                                <option value=\"no\">No</option>\r\n                            </select>\r\n\r\n                        </div> */}\r\n\r\n\r\n                        {this.renderErrors()}\r\n                        {this.renderNewRest()}\r\n\r\n                        <button type=\"submit\"> Create Account </button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default AddRestaurant;\r\n","import React, { Component } from \"react\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport { firebase } from \"../../../firebase\";\r\nimport \"./uploader.sass\"\r\n\r\nclass Uploader extends Component {\r\n\r\n    state = {\r\n        username: \"\",\r\n        avatar: \"\",\r\n        isUploading: false,\r\n        progress: 0,\r\n        avatarURL: \"\"\r\n    };\r\n\r\n\r\n    handleUploadStart = () => {\r\n\r\n        this.setState({\r\n            isUploading: true,\r\n            progress: 0\r\n        })\r\n    }\r\n\r\n\r\n    handleUploadError = () => {\r\n\r\n        this.setState({\r\n            isUploading: false,\r\n            progress: 0\r\n        })\r\n    }\r\n\r\n    handleProgress = (progress) => {\r\n\r\n        this.setState({\r\n            progress\r\n        })\r\n    }\r\n\r\n    handleUploadSuccess = (filename) => {\r\n\r\n        this.setState({\r\n            avatar: filename,\r\n            progress: 100,\r\n            isUploading: false\r\n        })\r\n\r\n        //get download url\r\n        firebase.storage().ref(\"images\").child(filename).getDownloadURL().then(url => {\r\n\r\n            this.setState({\r\n                avatarURL: url\r\n            });\r\n\r\n            const fileData = {\r\n                filename: filename,\r\n                fileUrl: url\r\n            }\r\n\r\n            this.props.storeFilename(fileData);\r\n        })\r\n    }\r\n\r\n    renderAvatar = () => {\r\n\r\n        const avatarUrl = this.state.avatarURL;\r\n\r\n\r\n\r\n        return avatarUrl ? <div className=\"aatar\" style={{\r\n            backgroundImage: `url(${avatarUrl})`,\r\n            width: \"100%\",\r\n            height: \"300px\",\r\n            backgroundSize: \"cover\"\r\n        }}>\r\n\r\n        </div> : null;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return <div>\r\n\r\n            <FileUploader\r\n                accept=\"image/*\"\r\n                name=\"avatar\"\r\n                randomizeFilename\r\n                storageRef={firebase.storage().ref(\"images\")}\r\n                onUploadStart={this.handleUploadStart}\r\n                onUploadError={this.handleUploadError}\r\n                onUploadSuccess={this.handleUploadSuccess}\r\n                onProgress={this.handleProgress}\r\n            />\r\n            {this.renderAvatar()}\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Uploader;","import React, { Component } from \"react\";\r\nimport Header from \"../../Header/header\";\r\nimport { firebase } from \"../../../firebase\";\r\nimport Uploader from \"../../widgets/Uploader/uploader\";\r\nimport { foodDefaultImage } from \"../../../config\";\r\n\r\nclass AddMenuItem extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        restId: this.props.match.params.id,\r\n        restData: null,\r\n\r\n        formData: {\r\n\r\n            name: {\r\n                required: true,\r\n                value: \"\"\r\n            },\r\n\r\n            price: {\r\n\r\n                required: true,\r\n                value: \"\"\r\n            },\r\n\r\n            category: {\r\n                required: true,\r\n                value: \"\"\r\n            },\r\n\r\n            cover: {\r\n                required: true,\r\n                value: {\r\n                    filename: \"default\",\r\n                    fileUrl: foodDefaultImage\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const restId = this.props.match.params.id;\r\n        //fetch rest data;\r\n\r\n        firebase.database().ref(`restaurants/${restId}`).once(\"value\").then(snapshot => {\r\n\r\n            const restData = snapshot.val();\r\n\r\n            if (restData) {\r\n\r\n                this.setState({\r\n                    restData\r\n                })\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let dataToSubmit = {}\r\n        const formData = this.state.formData;\r\n        const restId = this.state.restId;\r\n        let errors = [];\r\n\r\n        //grab data and perform some validation\r\n        for (let key in formData) {\r\n\r\n            dataToSubmit[key] = formData[key].value\r\n\r\n            //check if field is required and empty\r\n            if (formData[key].required && formData[key].value === \"\") {\r\n\r\n                errors.push(`${key} is required`);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        //if errors set state of errors\r\n        if (errors.length > 0) {\r\n\r\n\r\n            this.setState({\r\n\r\n                errors\r\n            })\r\n\r\n        } else {\r\n\r\n\r\n            //set rest id\r\n            dataToSubmit['restId'] = this.props.match.params.id;\r\n\r\n            firebase.database().ref(\"menus\").push(dataToSubmit).then(() => {\r\n\r\n                sessionStorage.setItem(\"success\", \"item successfully added\");\r\n                this.props.history.push(\"/dashboard\");\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (element) => {\r\n\r\n        const formData = this.state.formData;\r\n        const field = formData[element.id];\r\n\r\n        field.value = element.event.target.value;\r\n\r\n        formData[element.id] = field;\r\n\r\n        this.setState({\r\n            formData\r\n        })\r\n    }\r\n\r\n    renderErrors = () => {\r\n\r\n        const errors = this.state.errors;\r\n\r\n        return errors ? errors.map(error => <p className=\"error\"> {error} </p>) : null;\r\n    }\r\n\r\n\r\n    storeFilename = (fileData) => {\r\n\r\n        const formData = this.state.formData;\r\n\r\n        formData['cover'].value = fileData;\r\n\r\n        this.setState({\r\n\r\n            formData\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        console.log(this.state);\r\n\r\n        return <div>\r\n\r\n\r\n            <div>\r\n\r\n                <Header />\r\n\r\n                <h1 className=\"main-title text-center\"> Add Menu Item </h1>\r\n                <div className=\"form-wrapper\">\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n\r\n                        <div className=\"form-element\">\r\n                            <label> Cover </label>\r\n                            <Uploader storeFilename={(filename) => this.storeFilename(filename)} />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-element\">\r\n                            <input\r\n                                type=\"text\" placeholder=\"Enter Name\"\r\n                                onChange={(event) => this.handleChange({ event, id: \"name\" })}\r\n                                value={this.state.formData.name.value}\r\n                            />\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-element\">\r\n                            <input\r\n                                type=\"number\" placeholder=\"Price per quantity\"\r\n                                onChange={(event) => this.handleChange({ event, id: \"price\" })}\r\n                                value={this.state.formData.name.price}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-element\">\r\n\r\n                            <select\r\n\r\n                                onChange={(event) => this.handleChange({ event, id: \"category\" })}\r\n\r\n                            >\r\n\r\n                                <option value=\"\">-- Select Category</option>\r\n                                <option value=\"breakfast\">Breakfast</option>\r\n                                <option value=\"lunch\">Lunch</option>\r\n                                <option value=\"dinner\">Dinner</option>\r\n                                <option value=\"desert\">Dessert</option>\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n\r\n                        {this.renderErrors()}\r\n                        <button type=\"submit\"> Add to Menu</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default AddMenuItem;","import React, { Component } from \"react\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\nimport Header from \"../../Header/header\";\r\nimport _ from \"lodash\";\r\nimport { restDefaultImage } from \"../../../config\";\r\nimport RestMenuTemplate from \"../../widgets/user/restaurant/restMenuTemplate\";\r\n\r\nclass Menu extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        menus: null,\r\n        restData: null,\r\n        cart: []\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        const restId = this.props.match.params.id;\r\n\r\n        //get restaurant\r\n\r\n        firebase.database().ref(`restaurants/${restId}`).once(\"value\").then(snapshot => {\r\n\r\n\r\n            const restData = snapshot.val();\r\n\r\n            firebase.database().ref(`menus`).orderByChild(\"restId\").equalTo(restId).once(\"value\").then(snapshot => {\r\n\r\n                const menus = firebaseLooper(snapshot);\r\n\r\n                const data = menus.sort((a, b) => {\r\n\r\n                    if (a.category > b.category) {\r\n\r\n                        return 1;\r\n                    } else {\r\n\r\n                        return -1;\r\n                    }\r\n                })\r\n\r\n\r\n                // console.log(data);\r\n\r\n                //filter data\r\n\r\n                if (menus) {\r\n\r\n                    this.setState({\r\n                        menus: data,\r\n                        restData\r\n                    })\r\n                }\r\n            })\r\n        })\r\n\r\n        //get restaurant menu\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const cart = this.state.cart;\r\n\r\n        const item = event.target.item.value;\r\n        let quantity = parseInt(event.target.quantity.value);\r\n        const price = parseInt(event.target.price.value);\r\n\r\n        if (!quantity) {\r\n\r\n            quantity = 1;\r\n        }\r\n\r\n        const itemCost = price * quantity;\r\n\r\n        const dataToSubmit = {\r\n            item,\r\n            quantity,\r\n            price,\r\n            itemCost\r\n        }\r\n\r\n        cart.push(dataToSubmit);\r\n\r\n        console.log(cart);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    renderMenu = () => {\r\n\r\n        //get list of menu items\r\n        const menus = this.state.menus;\r\n        let cat = [];\r\n\r\n\r\n        return menus ? <RestMenuTemplate menuData={menus} handleSubmit={(event) => this.handleSubmit(event)} /> : null;\r\n\r\n\r\n    }\r\n\r\n\r\n    renderMenuItems = (item) => {\r\n\r\n\r\n        const menus = this.state.menus;\r\n\r\n        const datas = menus.filter(menu => {\r\n\r\n            return menu.category === item;\r\n        });\r\n\r\n        return datas.map(data => {\r\n\r\n            return <div className=\"menu-content\">\r\n\r\n                <div className=\"avatar\"></div>\r\n\r\n                <div className=\"content\">\r\n                    <p> Name: {data.name} </p>\r\n                    <p> Price: {data.price} </p>\r\n                </div>\r\n            </div>\r\n        })\r\n    }\r\n\r\n\r\n    renderProfile = () => {\r\n\r\n        const restData = this.state.restData;\r\n\r\n\r\n\r\n        return restData ? <div className=\"rest-profile-wrapper\">\r\n\r\n            <div className=\"avatar\" style={{\r\n                backgroundImage: `url(${restDefaultImage})`\r\n            }}> </div>\r\n            <h1 className=\"rest-name\"> {restData.name} </h1>\r\n            <p className=\"location\">Location: {restData.location} </p>\r\n\r\n        </div> : null;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        console.log(this.state)\r\n\r\n        return <div>\r\n\r\n            <Header />\r\n\r\n\r\n            {this.renderProfile()}\r\n\r\n            <div>\r\n                {this.renderMenu()}\r\n            </div>\r\n        </div >\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from \"react\";\r\nimport Header from \"../../Header/header\";\r\nimport CartTemplate from \"../../widgets/cart/cartTemplate\";\r\nimport \"./viewCart.sass\";\r\nimport _ from \"lodash\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\nimport { genDate } from \"../../../config\";\r\n\r\nclass ViewCart extends Component {\r\n  state = {\r\n    cart: null,\r\n    userData: null,\r\n    restData: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const cart = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n\r\n    if (cart) {\r\n      //get userData;\r\n      const loginId = sessionStorage.getItem(\"loginId\");\r\n\r\n      //get the rest id\r\n      const restIds = cart.map(item => {\r\n        return item.restId;\r\n      });\r\n\r\n      console.log(restIds);\r\n\r\n      //get the firest rest id;\r\n      const restId = restIds[0];\r\n\r\n      console.log(restId);\r\n\r\n      // console.log(loginId);\r\n\r\n      firebase\r\n        .database()\r\n        .ref(\"users\")\r\n        .orderByChild(\"loginId\")\r\n        .equalTo(loginId)\r\n        .once(\"value\")\r\n        .then(snapshot => {\r\n          const userData = firebaseLooper(snapshot)[0];\r\n          if (!_.isEmpty(userData)) {\r\n            //get restData;\r\n            firebase\r\n              .database()\r\n              .ref(`restaurants/${restId}`)\r\n              .once(\"value\")\r\n              .then(snapshot => {\r\n                const restData = snapshot.val();\r\n\r\n                this.setState({\r\n                  cart,\r\n                  userData,\r\n                  restData\r\n                });\r\n              });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  clearCart = () => {\r\n    const cart = this.state.cart;\r\n    sessionStorage.removeItem(\"cart\");\r\n    this.setState({\r\n      cart: []\r\n    });\r\n  };\r\n\r\n  removeItem = item => {\r\n    const cart = this.state.cart;\r\n\r\n    if (!_.isEmpty(cart)) {\r\n      cart.forEach((cartItem, index) => {\r\n        if (cartItem.id === item.id) {\r\n          cart.splice(index, 1);\r\n          sessionStorage.setItem(\"cart\", JSON.stringify(cart));\r\n          this.setState({\r\n            cart\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  renderCart = () => {\r\n    const cart = this.state.cart;\r\n\r\n    return !_.isEmpty(cart) ? (\r\n      <div>\r\n        <h1 className=\"main-title text-center\"> Your Cart!</h1>\r\n        <CartTemplate\r\n          cartData={cart}\r\n          text=\"Place Order\"\r\n          link=\"user/order/placeOrder\"\r\n          clearCart={() => this.clearCart()}\r\n          removeItem={item => this.removeItem(item)}\r\n        />\r\n      </div>\r\n    ) : (\r\n      <h1 className=\"main-title text-center\"> Cart is Empty </h1>\r\n    );\r\n  };\r\n\r\n  placeOrder = () => {\r\n    const cart = this.state.cart;\r\n    const userData = this.state.userData;\r\n    const restData = this.state.restData;\r\n\r\n    const { id: userId, name, loginId, location, contact, email } = userData;\r\n\r\n    if (userData) {\r\n      const userInfo = {\r\n        name,\r\n        userId,\r\n        loginId,\r\n        location,\r\n        contact,\r\n        email\r\n      };\r\n\r\n      const userOrder = {\r\n        order: cart,\r\n        userData: userInfo,\r\n        restData,\r\n        status: \"pending\",\r\n        createdOn: genDate()\r\n      };\r\n\r\n      //place order\r\n      firebase\r\n        .database()\r\n        .ref(\"orders\")\r\n        .push(userOrder)\r\n        .then(() => {\r\n          //clear the cart\r\n          sessionStorage.removeItem(\"cart\");\r\n          this.setState({\r\n            cart: []\r\n          });\r\n          this.props.history.push(\"/dashboard\");\r\n        });\r\n    }\r\n  };\r\n\r\n  renderCta = () => {\r\n    const cart = this.state.cart;\r\n\r\n    return !_.isEmpty(cart) ? (\r\n      <div\r\n        className=\"btn btn-main text-center\"\r\n        onClick={() => this.placeOrder()}\r\n      >\r\n        {\" \"}\r\n        Place Orders{\" \"}\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"cart view-cart\">\r\n          {this.renderCart()}\r\n          {this.renderCta()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewCart;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../Header/header\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\nimport _ from \"lodash\";\r\nimport \"./orders.sass\"\r\n\r\nclass RestOrders extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        orders: null\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        //get login id\r\n\r\n        const loginId = sessionStorage.getItem(\"loginId\");\r\n\r\n        // console.log(loginId);  //current loginId = -LquAriyPoT3OVc5KYEZ\r\n\r\n        //get list of all orders\r\n        //filter order of restaurant\r\n\r\n        firebase.database().ref('orders').orderByChild(\"createdOn\").once('value').then(snapshot => {\r\n\r\n            const orders = firebaseLooper(snapshot);\r\n\r\n            if (!_.isEmpty(orders)) {\r\n\r\n                //get restOrders\r\n                const restOrders = orders.filter(order => {\r\n\r\n                    return order.restData.loginId === loginId\r\n                });\r\n\r\n\r\n                if (!_.isEmpty(restOrders)) {\r\n\r\n                    this.setState({\r\n\r\n                        orders: restOrders\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    completeOrder = (orderId) => {\r\n\r\n        const orders = this.state.orders;\r\n\r\n        if (!_.isEmpty(orders)) {\r\n\r\n            const order = orders.find(order => {\r\n\r\n                return order.id === orderId\r\n            });\r\n\r\n            //set status to complete\r\n            order.status = \"complete\";\r\n\r\n            orders[orderId] = order;\r\n\r\n\r\n            //update database\r\n            firebase.database().ref(`orders/${orderId}`).update({\r\n                status: \"complete\"\r\n            }).then(() => {\r\n\r\n                //re - render the dom\r\n                this.setState({\r\n\r\n                    orders\r\n                })\r\n            })\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    deleteOrder = (orderId) => {\r\n\r\n        const orders = this.state.orders;\r\n        let position = null;\r\n        orders.forEach((order, index) => {\r\n\r\n            if (order.id === orderId) {\r\n\r\n                position = index\r\n            }\r\n        })\r\n\r\n\r\n\r\n        //update database\r\n\r\n        firebase.database().ref(`orders/${orderId}`).remove().then(() => {\r\n\r\n            orders.splice(position, 1);\r\n\r\n            this.setState({\r\n\r\n                orders\r\n            })\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    renderCta = (order) => {\r\n\r\n        const status = order.status;\r\n\r\n        //check the status of the order\r\n        switch (status) {\r\n\r\n\r\n            case \"complete\":\r\n                return <button className=\"btn btn-danger\" onClick={() => this.deleteOrder(order.id)}> Delete Order</button>\r\n\r\n            case \"pending\":\r\n                return <button className=\"btn btn-success\" onClick={() => this.completeOrder(order.id)}>Complete Order</button>\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderOrder = () => {\r\n\r\n        const orders = this.state.orders;\r\n\r\n\r\n        if (!_.isEmpty(orders)) {\r\n\r\n            return orders.map(order => {\r\n\r\n                return <div className=\"order-item\">\r\n\r\n                    <div className=\"user-info\">\r\n\r\n                        <h2 className=\"name\">Name: {order.userData.name}</h2>\r\n                        <p className=\"location\"> Location: {order.userData.location}</p>\r\n                        <p className=\"contact\"> Contact: {order.userData.contact}</p>\r\n                        <p className=\"contact\"> Date: {order.createdOn}</p>\r\n                    </div>\r\n                    {/* list of orders */}\r\n                    <div>\r\n\r\n                        {order.order.map(item => {\r\n                            return <p> {item.name}</p>;\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                    <p> Status: {order.status}</p>\r\n\r\n                    {this.renderCta(order)}\r\n                </div>\r\n            })\r\n        } {\r\n\r\n            return <div className=\"feedback\"> No Orders </div>\r\n        }\r\n    }\r\n\r\n    clearHistory = () => {\r\n\r\n        console.log(\"clear all orders\");\r\n    }\r\n    render() {\r\n\r\n        //TODO -- CLEAN UP THE STRUCTURE OF THE ORDER\r\n        return <div>\r\n\r\n            <Header />\r\n            <h1 className=\"main-title text-center\"> List of Orders</h1>\r\n\r\n            <div className=\"order-items-wrapper\">\r\n                {this.renderOrder()}\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default RestOrders;","import React, { Component } from \"react\";\r\nimport Header from \"../../Header/header\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\nimport _ from \"lodash\";\r\nimport \"./user_order.sass\";\r\n\r\nclass UserOders extends Component {\r\n\r\n    state = {\r\n\r\n        orders: null\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n\r\n        //get loginId of user\r\n        const loginId = sessionStorage.getItem(\"loginId\");\r\n\r\n        //get orders from database\r\n        firebase.database().ref('orders').once('value').then(snapshot => {\r\n\r\n            const orders = firebaseLooper(snapshot);\r\n\r\n            //filter out user order\r\n            const userOrder = orders.filter(order => {\r\n                //compate loginId  and return customer order\r\n                return order.userData.loginId === loginId;\r\n            });\r\n\r\n            //check if order is empty\r\n            if (!_.isEmpty(userOrder)) {\r\n\r\n                //set state of order to order\r\n                this.setState({\r\n\r\n                    orders: userOrder\r\n                })\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    renderOrder = () => {\r\n\r\n        const orders = this.state.orders;\r\n\r\n        if (!_.isEmpty(orders)) {\r\n\r\n            return orders.map(order => {\r\n\r\n                return <div className=\"user-order-unit\">\r\n\r\n                    <p className=\"date\"> Date: {order.createdOn}</p>\r\n                    <p className=\"status\"> Status: {order.status}</p>\r\n                    <p className=\"item-title\"> Order Items </p>\r\n                    {/* render order items */}\r\n                    {order.order.map(item => {\r\n\r\n                        console.log(item);\r\n                        return <div className=\"order-item\">\r\n                            <div className=\"item-avatar\" style={{\r\n                                backgroundImage: `url(${item.cover.fileUrl})`\r\n                            }}></div>\r\n                            <div className=\"content\">\r\n                                <p className=\"item-name\"> Name: {item.name}</p>\r\n                                <p className=\"item-price\"> Price: GHC{item.price}</p>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n\r\n                </div>\r\n            })\r\n        }\r\n    }\r\n\r\n    clearHistory = () => {\r\n\r\n        let orders = this.state.orders;\r\n\r\n        orders.forEach(order => {\r\n\r\n            firebase.database().ref(`orders/${order.id}`).remove().then(() => {\r\n\r\n\r\n                this.setState({\r\n\r\n                    orders: null\r\n                })\r\n\r\n            })\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    renderCta = () => {\r\n\r\n        return this.state.orders ? <div className=\"btn btn-main text-center\" onClick={() => this.clearHistory()}> Clear History </div> : null;\r\n    }\r\n    render() {\r\n\r\n        return <div>\r\n\r\n            <Header />\r\n\r\n            <h1 className=\"main-title text-center\"> Order History! </h1>\r\n\r\n            <div className=\"user-order-wrapper\">\r\n\r\n                {this.renderOrder()}\r\n\r\n                {this.renderCta()}\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default UserOders;","import React, { Component } from \"react\";\r\nimport Header from \"../../Header/header\";\r\nimport _ from \"lodash\";\r\nimport { firebase, firebaseLooper } from \"../../../firebase\";\r\n\r\nclass AdminOrders extends Component {\r\n  state = {\r\n    orders: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase\r\n      .database()\r\n      .ref(\"orders\")\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        const orders = firebaseLooper(snapshot);\r\n\r\n        if (!_.isEmpty(orders)) {\r\n          this.setState({\r\n            orders\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  renderOrders = () => {\r\n    const orders = this.state.orders;\r\n    if (!_.isEmpty(orders)) {\r\n      return orders.map(order => {\r\n        return (\r\n          <div className=\"order-unit\">\r\n            <p> Order Date: {order.createdOn}</p>\r\n            <p>Order: Status: {order.status}</p>\r\n            <h2> User Info</h2>\r\n            <p> {order.userData.name} </p>\r\n            <p> {order.userData.location} </p>\r\n            <p> {order.userData.contact} </p>\r\n            <p> {order.userData.email} </p>\r\n            {console.log(order)}\r\n            <h2> Order Details </h2>\r\n            {order.order.map(item => {\r\n              return (\r\n                <div>\r\n                  <p> {item.name}</p>\r\n                </div>\r\n              );\r\n            })}\r\n            ;\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <h1 className=\"main-title text-center\">List of Orders </h1>\r\n\r\n        {this.renderOrders()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminOrders;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../Header/header\";\r\nimport Uploader from \"../widgets/Uploader/uploader\";\r\nimport { firebase, firebaseLooper } from \"../../firebase\";\r\nimport _ from \"lodash\";\r\n\r\nclass ChangeProfile extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        profileData: null,\r\n        userData: null\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        const loginId = sessionStorage.getItem(\"loginId\");\r\n\r\n\r\n        //get users from  database\r\n        firebase.database().ref(\"users\").once(\"value\").then(snapshot => {\r\n\r\n            const users = firebaseLooper(snapshot);\r\n\r\n            const user = users.find(user => {\r\n\r\n                return user.loginId === loginId\r\n            });\r\n\r\n            if (!_.isEmpty(user)) {\r\n\r\n                this.setState({\r\n\r\n                    userData: user\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    storeFilename = (fileData) => {\r\n        this.setState({\r\n            profileData: fileData\r\n\r\n        })\r\n    }\r\n\r\n\r\n    handleProfileChange = () => {\r\n\r\n        const loginId = sessionStorage.getItem(\"loginId\");\r\n        const userData = this.state.userData;\r\n\r\n        //update database with new profileData;\r\n\r\n        firebase.database().ref(`users/${userData.id}`).update({\r\n            profileData: this.state.profileData\r\n        }).then(() => {\r\n\r\n            this.props.history.push(\"/dashboard\")\r\n\r\n        })\r\n    }\r\n\r\n\r\n    renderCta = () => {\r\n\r\n        const profileData = this.state.profileData;\r\n\r\n        return profileData ? <div className=\"btn btn-main text-center\" onClick={() => this.handleProfileChange()}>  Change Profile  </div> : null;\r\n    }\r\n    render() {\r\n\r\n        console.log(this.state);\r\n        return <div>\r\n\r\n            <Header />\r\n\r\n            <div className=\"profile-change-wrapper\">\r\n                <Uploader storeFilename={(filename) => this.storeFilename(filename)} />\r\n                {this.renderCta()}\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ChangeProfile;","import React, { Component } from \"react\";\r\nimport { firebase } from '../../../firebase';\r\nimport _ from \"lodash\";\r\nimport Header from \".././../Header/header\";\r\nimport Uploader from \"../../widgets/Uploader/uploader\";\r\n\r\n\r\nclass EditMenu extends Component {\r\n\r\n\r\n    state = {\r\n\r\n        menuData: null\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const menuId = this.props.match.params.id;\r\n\r\n        //get menu item\r\n        firebase.database().ref(`menus/${menuId}`).once(\"value\").then(snapshot => {\r\n\r\n            const menuData = snapshot.val();\r\n\r\n            if (!_.isEmpty(menuData)) {\r\n\r\n                this.setState({\r\n\r\n                    menuData\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (element) => {\r\n\r\n        const menuData = this.state.menuData;\r\n\r\n        menuData[element.id] = element.event.target.value;\r\n\r\n        this.setState({\r\n            menuData\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n        const menuId = this.props.match.params.id;\r\n        const menuData = this.state.menuData;\r\n\r\n        firebase.database().ref(`menus/${menuId}`).update(menuData).then(() => {\r\n\r\n            this.props.history.push(\"/dashboard\")\r\n        })\r\n    }\r\n\r\n    storeFilename = (fileData) => {\r\n\r\n        const menuData = this.state.menuData;\r\n        menuData.cover = fileData;\r\n        this.setState({\r\n            menuData\r\n        })\r\n\r\n    }\r\n\r\n    renderForm = () => {\r\n\r\n        const menuData = this.state.menuData;\r\n\r\n        return (!_.isEmpty(menuData)) ?\r\n\r\n            <div className=\"form-wrapper\">\r\n                <form onSubmit={(event) => this.handleSubmit(event)}>\r\n\r\n                    <div className=\"form-element\">\r\n                        <Uploader storeFilename={(fileData) => this.storeFilename(fileData)} />\r\n\r\n                    </div>\r\n                    <div className=\"form-element\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" name=\"title\" value={menuData.name} onChange={(event) => this.handleChange({\r\n                            event, id: \"name\"\r\n                        })} />\r\n                    </div>\r\n                    <div className=\"form-element\">\r\n                        <label>Price</label>\r\n                        <input type=\"text\" name=\"title\" value={menuData.price} onChange={(event) => this.handleChange({ event, id: \"price\" })} />\r\n                    </div>\r\n\r\n                    <button> Save Changes  </button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n            : null;\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        console.log(this.state)\r\n\r\n        return <div>\r\n\r\n            <Header />\r\n            <h1 className=\"main-title text-center\"> Edit  Menu</h1>\r\n            {this.renderForm()}\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default EditMenu;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home/home\";\r\nimport Layout from \"./hoc/Layout/layout\";\r\nimport Search from \"./components/Search/search\";\r\nimport Login from \"./components/Login/login\";\r\nimport Register from \"./components/Register/register\";\r\nimport Dashboard from \"./components/Dashboard/dashboard\";\r\nimport Logout from \"./components/Logout/logout\";\r\nimport Restaurants from \"./components/User/Restaurants/restaurants\";\r\nimport Restaurant from \"./components/User/Restaurants/restaurant\";\r\nimport Customers from \"./components/User/Customers/customers\";\r\nimport Customer from \"./components/User/Customers/customer\";\r\nimport Riders from \"./components/User/Riders/riders\";\r\nimport Orders from \"./components/User/orders/orders\";\r\nimport User from \"./components/User/user\";\r\nimport AddUser from \"./components/User/addUser\";\r\nimport AddRestaurant from \"./components/User/addRestaurant\";\r\nimport AddMenuItem from \"./components/User/Restaurants/addMenuItem\";\r\nimport RestMenu from \"./components/User/Restaurants/restMenu\";\r\nimport ViewCart from \"./components/User/Cart/viewCart\";\r\nimport RestOrders from \"./components/User/orders/restOrders\";\r\nimport UserOrders from \"./components/User/orders/userOrders\";\r\nimport AdminOrders from \"./components/User/orders/adminOders\";\r\nimport ChangeProfile from \"./components/User/changeProfile\";\r\nimport EditMenu from \"./components/User/Restaurants/edit_menu\";\r\n\r\n\r\nconst Routes = () => {\r\n\r\n\r\n    return <Layout>\r\n\r\n        <Switch>\r\n\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/login\" exact component={Login} />\r\n            <Route path=\"/register\" exact component={Register} />\r\n            <Route path=\"/search\" exact component={Search} />\r\n            <Route path=\"/dashboard\" exact component={Dashboard} />\r\n            <Route path=\"/logout\" exact component={Logout} />\r\n            <Route path=\"/riders\" exact component={Riders} />\r\n            <Route path=\"/orders\" exact component={Orders} />\r\n            <Route path=\"/restaurants\" exact component={Restaurants} />\r\n            <Route path=\"/customers\" exact component={Customers} />\r\n            <Route path=\"/user/changeProfile\" exact component={ChangeProfile} />\r\n            <Route path=\"/rest/orders/:id\" exact component={RestOrders} />\r\n            <Route path=\"/user/viewCart\" exact component={ViewCart} />\r\n            <Route path=\"/customers/:id\" exact component={Customer} />\r\n            <Route path=\"/restaurant/add-restaurant\" exact component={AddRestaurant} />\r\n            <Route path=\"/restaurant/:id\" exact component={Restaurant} />\r\n            <Route path=\"/restaurant/addMenuItem/:id\" exact component={AddMenuItem} />\r\n            <Route path=\"/user/add-user\" exact component={AddUser} />\r\n            <Route path=\"/user/orders\" exact component={UserOrders} />\r\n            <Route path=\"/admin/orders\" exact component={AdminOrders} />\r\n            <Route path=\"/user/:id\" exact component={User} />\r\n            <Route path=\"/restaurant/:id/menu\" exact component={RestMenu} />\r\n            <Route path=\"/restaurant/menu/edit/:id\" exact component={EditMenu} />\r\n        </Switch>\r\n\r\n    </Layout>\r\n}\r\n\r\nexport default Routes;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Routes from \"./routes\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}